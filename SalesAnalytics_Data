{
  "createOrReplace": {
    "object": {
      "database": "SalesAnalytics_Data"
    },
    "database": {
      "name": "SalesAnalytics_Data",
      "compatibilityLevel": 1400,
      "model": {
        "culture": "en-US",
        "dataSources": [
          {
            "name": "SqlServer sqlbi01 RealBI",
            "connectionString": "Provider=SQLOLEDB;Data Source=sqlbi01;Persist Security Info=false;Integrated Security=SSPI;Initial Catalog=RealBI;Packet Size=10000",
            "impersonationMode": "impersonateAccount",
            "account": "KEHE\\BMWARD",
            "annotations": [
              {
                "name": "ConnectionEditUISource",
                "value": "SqlServer"
              }
            ]
          }
        ],
        "tables": [
          {
            "name": "CustomerDeliveryWindow",
            "columns": [
              {
                "name": "DcCustomerAddressDOW",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddressDOW",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "Char"
              },
              {
                "name": "ShipToCustomerAddressNum",
                "dataType": "string",
                "sourceColumn": "ShipToCustomerAddressNum",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerAddressNum",
                "dataType": "string",
                "sourceColumn": "CustomerAddressNum",
                "sourceProviderType": "Char"
              },
              {
                "name": "TotalDeliveries",
                "dataType": "int64",
                "sourceColumn": "TotalDeliveries",
                "sourceProviderType": "Integer"
              },
              {
                "name": "DayNumberOfWeek",
                "dataType": "int64",
                "sourceColumn": "DayNumberOfWeek",
                "sourceProviderType": "Integer"
              },
              {
                "name": "DayOfWeek",
                "dataType": "string",
                "sourceColumn": "DayOfWeek",
                "sourceProviderType": "Char"
              },
              {
                "name": "DeliveryWindowOpenTime",
                "dataType": "dateTime",
                "sourceColumn": "DeliveryWindowOpenTime",
                "formatString": "General Date",
                "sourceProviderType": "145"
              },
              {
                "name": "DeliveryWindowCloseTime",
                "dataType": "dateTime",
                "sourceColumn": "DeliveryWindowCloseTime",
                "formatString": "General Date",
                "sourceProviderType": "145"
              }
            ],
            "partitions": [
              {
                "name": "CustomerDeliveryWindow",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT [DcCustomerAddressDOW]",
                    "      ,[DcCustomerAddress]",
                    "      ,[Dc]",
                    "      ,[ShipToCustomerAddressNum]",
                    "      ,[CustomerAddressNum]",
                    "      ,[TotalDeliveries]",
                    "      ,[DayNumberOfWeek]",
                    "      ,[DayOfWeek]",
                    "      ,DeliveryWindowOpenTime",
                    "      ,DeliveryWindowCloseTime",
                    "  FROM [dbviews].[CustomerDeliveryWindow]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [DcCustomerAddressDOW]",
                      "      ,[DcCustomerAddress]",
                      "      ,[Dc]",
                      "      ,[ShipToCustomerAddressNum]",
                      "      ,[CustomerAddressNum]",
                      "      ,[TotalDeliveries]",
                      "      ,[DayNumberOfWeek]",
                      "      ,[DayOfWeek]",
                      "      ,DeliveryWindowOpenTime",
                      "      ,DeliveryWindowCloseTime",
                      "  FROM [dbviews].[CustomerDeliveryWindow]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT [DcCustomerAddressDOW]",
                  "      ,[DcCustomerAddress]",
                  "      ,[Dc]",
                  "      ,[ShipToCustomerAddressNum]",
                  "      ,[CustomerAddressNum]",
                  "      ,[TotalDeliveries]",
                  "      ,[DayNumberOfWeek]",
                  "      ,[DayOfWeek]",
                  "      ,DeliveryWindowOpenTime",
                  "      ,DeliveryWindowCloseTime",
                  "  FROM [dbviews].[CustomerDeliveryWindow]"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "CustomerDeliveryWindow"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [DcCustomerAddressDOW]",
                  "      ,[DcCustomerAddress]",
                  "      ,[Dc]",
                  "      ,[ShipToCustomerAddressNum]",
                  "      ,[CustomerAddressNum]",
                  "      ,[TotalDeliveries]",
                  "      ,[DayNumberOfWeek]",
                  "      ,[DayOfWeek]",
                  "      ,DeliveryWindowOpenTime",
                  "      ,DeliveryWindowCloseTime",
                  "  FROM [dbviews].[CustomerDeliveryWindow]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "CustomerManagement",
            "columns": [
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerPhysicalLocationID",
                "dataType": "int64",
                "sourceColumn": "CustomerPhysicalLocationID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "RetailerID",
                "dataType": "int64",
                "sourceColumn": "RetailerID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "RetailerName",
                "dataType": "string",
                "sourceColumn": "RetailerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "RetailerAreaID",
                "dataType": "int64",
                "sourceColumn": "RetailerAreaID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "RetailerAreaName",
                "dataType": "string",
                "sourceColumn": "RetailerAreaName",
                "sourceProviderType": "Char"
              },
              {
                "name": "RetailerOrganizationID",
                "dataType": "int64",
                "sourceColumn": "RetailerOrganizationID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "RetailerOrganizationName",
                "dataType": "string",
                "sourceColumn": "RetailerOrganizationName",
                "sourceProviderType": "Char"
              },
              {
                "name": "AccountID",
                "dataType": "int64",
                "sourceColumn": "AccountID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "AccountName",
                "dataType": "string",
                "sourceColumn": "AccountName",
                "sourceProviderType": "Char"
              },
              {
                "name": "AccountManagerName",
                "dataType": "string",
                "sourceColumn": "AccountManagerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "RegionID",
                "dataType": "int64",
                "sourceColumn": "RegionID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "RegionName",
                "dataType": "string",
                "sourceColumn": "RegionName",
                "sourceProviderType": "Char"
              },
              {
                "name": "RegionDirectorName",
                "dataType": "string",
                "sourceColumn": "RegionDirectorName",
                "sourceProviderType": "Char"
              },
              {
                "name": "DivisionGroupID",
                "dataType": "int64",
                "sourceColumn": "DivisionGroupID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "DivisionGroupName",
                "dataType": "string",
                "sourceColumn": "DivisionGroupName",
                "sourceProviderType": "Char"
              },
              {
                "name": "DivisionGroupVPName",
                "dataType": "string",
                "sourceColumn": "DivisionGroupVPName",
                "sourceProviderType": "Char"
              },
              {
                "name": "BusinessGroupID",
                "dataType": "int64",
                "sourceColumn": "BusinessGroupID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "BusinessGroupName",
                "dataType": "string",
                "sourceColumn": "BusinessGroupName",
                "sourceProviderType": "Char"
              },
              {
                "name": "BusinessGroupSVPName",
                "dataType": "string",
                "sourceColumn": "BusinessGroupSVPName",
                "sourceProviderType": "Char"
              },
              {
                "name": "StoreLocationName",
                "dataType": "string",
                "sourceColumn": "StoreLocationName",
                "sourceProviderType": "Char"
              },
              {
                "name": "InfraID",
                "dataType": "int64",
                "sourceColumn": "InfraID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "InfraName",
                "dataType": "string",
                "sourceColumn": "InfraName",
                "sourceProviderType": "Char"
              },
              {
                "name": "InfraDirector",
                "dataType": "string",
                "sourceColumn": "InfraDirector",
                "sourceProviderType": "Char"
              },
              {
                "name": "InfraVPID",
                "dataType": "int64",
                "sourceColumn": "InfraVPID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "InfraVPName",
                "dataType": "string",
                "sourceColumn": "InfraVPName",
                "sourceProviderType": "Char"
              },
              {
                "name": "InfraVP",
                "dataType": "string",
                "sourceColumn": "InfraVP",
                "sourceProviderType": "Char"
              },
              {
                "name": "SecurityId",
                "dataType": "int64",
                "sourceColumn": "SecurityId"
              }
            ],
            "partitions": [
              {
                "name": "CustomerManagement",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT t1.[DcCustomerAddress]",
                    "      ,[CustomerPhysicalLocationID]",
                    "      ,[RetailerID]",
                    "      ,[RetailerName]",
                    "      ,[RetailerAreaID]",
                    "      ,[RetailerAreaName]",
                    "      ,[RetailerOrganizationID]",
                    "      ,[RetailerOrganizationName]",
                    "      ,[AccountID]",
                    "      ,[AccountName]",
                    "      ,[AccountManagerName]",
                    "      ,[RegionID]",
                    "      ,[RegionName]",
                    "      ,[RegionDirectorName]",
                    "      ,[DivisionGroupID]",
                    "      ,[DivisionGroupName]",
                    "      ,[DivisionGroupVPName]",
                    "      ,[BusinessGroupID]",
                    "      ,[BusinessGroupName]",
                    "      ,[BusinessGroupSVPName]",
                    "  ,case ",
                    "\t  when RetailerOrganizationId in (3000009,3900091) then concat('SPROUTS #',CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000051 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000025 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000101 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000012 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000054 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3000048 then concat(concat(RetailerAreaName,' SUPERMARKET #'),CustomerStoreNumber) ",
                    "\t  when RetailerOrganizationID = 3000052 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                    "\t  when RetailerOrganizationID = 3900094 then concat(concat(RetailerAreaName,' - '),ltrim(Rtrim(City)))",
                    "\t  when RetailerOrganizationID = 3900033 then concat('LASSENS - ',ltrim(Rtrim(City)))",
                    "\t  else StoreLocationName end as StoreLocationName",
                    "      ,[InfraID]",
                    "      ,[InfraName]",
                    "      ,[InfraDirector]",
                    "      ,[InfraVPID]",
                    "      ,[InfraVPName]",
                    "      ,[InfraVP]",
                    ", 700001 as SecurityId",
                    "  FROM [customer].[CustomerManagement] t1 join customer.Customer t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                    " where BusinessGroupID in (400001",
                    ",400002",
                    ",400003",
                    ",400007)"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[DcCustomerAddress]",
                      "      ,[CustomerPhysicalLocationID]",
                      "      ,[RetailerID]",
                      "      ,[RetailerName]",
                      "      ,[RetailerAreaID]",
                      "      ,[RetailerAreaName]",
                      "      ,[RetailerOrganizationID]",
                      "      ,[RetailerOrganizationName]",
                      "      ,[AccountID]",
                      "      ,[AccountName]",
                      "      ,[AccountManagerName]",
                      "      ,[RegionID]",
                      "      ,[RegionName]",
                      "      ,[RegionDirectorName]",
                      "      ,[DivisionGroupID]",
                      "      ,[DivisionGroupName]",
                      "      ,[DivisionGroupVPName]",
                      "      ,[BusinessGroupID]",
                      "      ,[BusinessGroupName]",
                      "      ,[BusinessGroupSVPName]",
                      "  ,case ",
                      "\t  when RetailerOrganizationId in (3000009,3900091) then concat('SPROUTS #',CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000051 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000025 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000101 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000012 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000054 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3000048 then concat(concat(RetailerAreaName,' SUPERMARKET #'),CustomerStoreNumber) ",
                      "\t  when RetailerOrganizationID = 3000052 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                      "\t  when RetailerOrganizationID = 3900094 then concat(concat(RetailerAreaName,' - '),ltrim(Rtrim(City)))",
                      "\t  when RetailerOrganizationID = 3900033 then concat('LASSENS - ',ltrim(Rtrim(City)))",
                      "\t  else StoreLocationName end as StoreLocationName",
                      "      ,[InfraID]",
                      "      ,[InfraName]",
                      "      ,[InfraDirector]",
                      "      ,[InfraVPID]",
                      "      ,[InfraVPName]",
                      "      ,[InfraVP]",
                      ", 700001 as SecurityId",
                      "  FROM [customer].[CustomerManagement] t1 join customer.Customer t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                      " where BusinessGroupID in (400001",
                      ",400002",
                      ",400003",
                      ",400007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT t1.[DcCustomerAddress]",
                  "      ,[CustomerPhysicalLocationID]",
                  "      ,[RetailerID]",
                  "      ,[RetailerName]",
                  "      ,[RetailerAreaID]",
                  "      ,[RetailerAreaName]",
                  "      ,[RetailerOrganizationID]",
                  "      ,[RetailerOrganizationName]",
                  "      ,[AccountID]",
                  "      ,[AccountName]",
                  "      ,[AccountManagerName]",
                  "      ,[RegionID]",
                  "      ,[RegionName]",
                  "      ,[RegionDirectorName]",
                  "      ,[DivisionGroupID]",
                  "      ,[DivisionGroupName]",
                  "      ,[DivisionGroupVPName]",
                  "      ,[BusinessGroupID]",
                  "      ,[BusinessGroupName]",
                  "      ,[BusinessGroupSVPName]",
                  "  ,case ",
                  "\t  when RetailerOrganizationId in (3000009,3900091) then concat('SPROUTS #',CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000051 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000025 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000101 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000012 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000054 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000048 then concat(concat(RetailerAreaName,' SUPERMARKET #'),CustomerStoreNumber) ",
                  "\t  when RetailerOrganizationID = 3000052 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3900094 then concat(concat(RetailerAreaName,' - '),ltrim(Rtrim(City)))",
                  "\t  when RetailerOrganizationID = 3900033 then concat('LASSENS - ',ltrim(Rtrim(City)))",
                  "\t  else StoreLocationName end as StoreLocationName",
                  "      ,[InfraID]",
                  "      ,[InfraName]",
                  "      ,[InfraDirector]",
                  "      ,[InfraVPID]",
                  "      ,[InfraVPName]",
                  "      ,[InfraVP]",
                  ", 700001 as SecurityId",
                  "  FROM [customer].[CustomerManagement] t1 join customer.Customer t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                  " where BusinessGroupID in (400001",
                  ",400002",
                  ",400003",
                  ",400007)"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "CustomerManagement"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[DcCustomerAddress]",
                  "      ,[CustomerPhysicalLocationID]",
                  "      ,[RetailerID]",
                  "      ,[RetailerName]",
                  "      ,[RetailerAreaID]",
                  "      ,[RetailerAreaName]",
                  "      ,[RetailerOrganizationID]",
                  "      ,[RetailerOrganizationName]",
                  "      ,[AccountID]",
                  "      ,[AccountName]",
                  "      ,[AccountManagerName]",
                  "      ,[RegionID]",
                  "      ,[RegionName]",
                  "      ,[RegionDirectorName]",
                  "      ,[DivisionGroupID]",
                  "      ,[DivisionGroupName]",
                  "      ,[DivisionGroupVPName]",
                  "      ,[BusinessGroupID]",
                  "      ,[BusinessGroupName]",
                  "      ,[BusinessGroupSVPName]",
                  "  ,case ",
                  "\t  when RetailerOrganizationId in (3000009,3900091) then concat('SPROUTS #',CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000051 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000025 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000101 then concat(concat(RetailerName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000012 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000054 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3000048 then concat(concat(RetailerAreaName,' SUPERMARKET #'),CustomerStoreNumber) ",
                  "\t  when RetailerOrganizationID = 3000052 then concat(concat(RetailerAreaName,' #'),CustomerStoreNumber)",
                  "\t  when RetailerOrganizationID = 3900094 then concat(concat(RetailerAreaName,' - '),ltrim(Rtrim(City)))",
                  "\t  when RetailerOrganizationID = 3900033 then concat('LASSENS - ',ltrim(Rtrim(City)))",
                  "\t  else StoreLocationName end as StoreLocationName",
                  "      ,[InfraID]",
                  "      ,[InfraName]",
                  "      ,[InfraDirector]",
                  "      ,[InfraVPID]",
                  "      ,[InfraVPName]",
                  "      ,[InfraVP]",
                  ", 700001 as SecurityId",
                  "  FROM [customer].[CustomerManagement] t1 join customer.Customer t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                  " where BusinessGroupID in (400001",
                  ",400002",
                  ",400003",
                  ",400007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "CustomerMaster",
            "columns": [
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcChainCode",
                "dataType": "string",
                "sourceColumn": "DcChainCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "Char"
              },
              {
                "name": "LegacyAddressBookNumber",
                "dataType": "string",
                "sourceColumn": "LegacyAddressBookNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerName",
                "dataType": "string",
                "sourceColumn": "CustomerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerStoreNumber",
                "dataType": "int64",
                "sourceColumn": "CustomerStoreNumber",
                "sourceProviderType": "Integer"
              },
              {
                "name": "CustomerAddressLine1",
                "dataType": "string",
                "sourceColumn": "CustomerAddressLine1",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerAddressLine2",
                "dataType": "string",
                "sourceColumn": "CustomerAddressLine2",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerCity",
                "dataType": "string",
                "sourceColumn": "CustomerCity",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerState",
                "dataType": "string",
                "sourceColumn": "CustomerState",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerSubTypeCode",
                "dataType": "string",
                "sourceColumn": "CustomerSubTypeCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "CustomerPricingZone",
                "dataType": "string",
                "sourceColumn": "CustomerPricingZone",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcShipToAddress",
                "dataType": "string",
                "sourceColumn": "DcShipToAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "ChainName",
                "dataType": "string",
                "sourceColumn": "ChainName",
                "sourceProviderType": "Char"
              },
              {
                "name": "BannerName",
                "dataType": "string",
                "sourceColumn": "BannerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "EntityName",
                "dataType": "string",
                "sourceColumn": "EntityName",
                "sourceProviderType": "Char"
              },
              {
                "name": "SpoilageAllowancePercent",
                "dataType": "double",
                "sourceColumn": "SpoilageAllowancePercent",
                "sourceProviderType": "Numeric"
              },
              {
                "type": "calculated",
                "name": "CustomerNameNumber",
                "dataType": "string",
                "isDataTypeInferred": true,
                "expression": "CustomerMaster[LegacyAddressBookNumber]&\" - \"&CustomerMaster[CustomerName]"
              }
            ],
            "partitions": [
              {
                "name": "CustomerMaster",
                "source": {
                  "query": [
                    "SELECT t1.* FROM [dbviews].[CustomerMaster] t1",
                    "join dbviews.CustomerManagement t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                    "where BusinessGroupID in (400001",
                    ",400002",
                    ",400003",
                    ",400007)"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.* FROM [dbviews].[CustomerMaster] t1",
                      "join dbviews.CustomerManagement t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                      "where BusinessGroupID in (400001",
                      ",400002",
                      ",400003",
                      ",400007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT t1.* FROM [dbviews].[CustomerMaster] t1",
                  "join dbviews.CustomerManagement t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                  "where BusinessGroupID in (400001",
                  ",400002",
                  ",400003",
                  ",400007)"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "CustomerMaster"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.* FROM [dbviews].[CustomerMaster] t1",
                  "join dbviews.CustomerManagement t2 on t1.DcCustomerAddress=t2.DcCustomerAddress",
                  "where BusinessGroupID in (400001",
                  ",400002",
                  ",400003",
                  ",400007)</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "DrivingIssues",
            "columns": [
              {
                "name": "DrivingIssue",
                "dataType": "string",
                "sourceColumn": "DrivingIssue",
                "sourceProviderType": "Char"
              },
              {
                "name": "DrivingIssueGroup",
                "dataType": "string",
                "sourceColumn": "DrivingIssueGroup",
                "sourceProviderType": "Char"
              },
              {
                "name": "DrivingIssueName",
                "dataType": "string",
                "sourceColumn": "DrivingIssueName"
              }
            ],
            "partitions": [
              {
                "name": "DrivingIssues",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT [DrivingIssue]",
                    "      ,[DrivingIssueGroup]",
                    "      ,[DrivingIssueName]",
                    "  FROM [dbviews].[DrivingIssues]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [DrivingIssue]",
                      "      ,[DrivingIssueGroup]",
                      "      ,[DrivingIssueName]",
                      "  FROM [dbviews].[DrivingIssues]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT [DrivingIssue]",
                  "      ,[DrivingIssueGroup]",
                  "      ,[DrivingIssueName]",
                  "  FROM [dbviews].[DrivingIssues]"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "DrivingIssues"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [DrivingIssue]",
                  "      ,[DrivingIssueGroup]",
                  "      ,[DrivingIssueName]",
                  "  FROM [dbviews].[DrivingIssues]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "InvalidReasons",
            "columns": [
              {
                "name": "ReasonName",
                "dataType": "string",
                "sourceColumn": "ReasonName",
                "sourceProviderType": "Char"
              },
              {
                "name": "ReasonNameDisplay",
                "dataType": "string",
                "sourceColumn": "ReasonNameDisplay"
              }
            ],
            "partitions": [
              {
                "name": "InvalidReasons",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT ReasonName,",
                    "case when ReasonName = 'PENDING DISCO' then 'PENDING DISCO (C-CODE)' else ReasonName end as ReasonNameDisplay",
                    "FROM [dbviews].[InvalidReasons]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ReasonName,",
                      "case when ReasonName = 'PENDING DISCO' then 'PENDING DISCO (C-CODE)' else ReasonName end as ReasonNameDisplay",
                      "FROM [dbviews].[InvalidReasons]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT ReasonName,",
                  "case when ReasonName = 'PENDING DISCO' then 'PENDING DISCO (C-CODE)' else ReasonName end as ReasonNameDisplay",
                  "FROM [dbviews].[InvalidReasons]"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "InvalidReasons"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ReasonName,",
                  "case when ReasonName = 'PENDING DISCO' then 'PENDING DISCO (C-CODE)' else ReasonName end as ReasonNameDisplay",
                  "FROM [dbviews].[InvalidReasons]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "OutOfStockReasons",
            "columns": [
              {
                "name": "OutOfStockReasonCode",
                "dataType": "string",
                "sourceColumn": "OutOfStockReasonCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "OutOfStockReasonDescription",
                "dataType": "string",
                "sourceColumn": "OutOfStockReasonDescription",
                "sourceProviderType": "Char"
              }
            ],
            "partitions": [
              {
                "name": "OutOfStockReasons",
                "dataView": "full",
                "source": {
                  "query": " SELECT [dbviews].[OutOfStockReasons].* FROM [dbviews].[OutOfStockReasons] ",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                }
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": " SELECT [dbviews].[OutOfStockReasons].* FROM [dbviews].[OutOfStockReasons] "
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "OutOfStockReasons"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              }
            ]
          },
          {
            "name": "CustomerAR",
            "columns": [
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "GroupCode",
                "dataType": "string",
                "sourceColumn": "GroupCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "CreditLimit",
                "dataType": "double",
                "sourceColumn": "CreditLimit",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "HoldInvoices",
                "dataType": "string",
                "sourceColumn": "HoldInvoices",
                "sourceProviderType": "Char"
              },
              {
                "name": "PaymentTermCode",
                "dataType": "string",
                "sourceColumn": "PaymentTermCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "LastInvoiceDate",
                "dataType": "dateTime",
                "sourceColumn": "LastInvoiceDate",
                "formatString": "General Date",
                "sourceProviderType": "DBDate"
              },
              {
                "name": "LastPaidDate",
                "dataType": "dateTime",
                "sourceColumn": "LastPaidDate",
                "formatString": "General Date",
                "sourceProviderType": "DBDate"
              },
              {
                "name": "AverageDaysLate",
                "dataType": "double",
                "sourceColumn": "AverageDaysLate",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerOpenReceivable",
                "dataType": "double",
                "sourceColumn": "CustomerOpenReceivable",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerCurrentDue",
                "dataType": "double",
                "sourceColumn": "CustomerCurrentDue",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerPastDueUnder31",
                "dataType": "double",
                "sourceColumn": "CustomerPastDueUnder31",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerPastDue31To60",
                "dataType": "double",
                "sourceColumn": "CustomerPastDue31To60",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerPastDue61To90",
                "dataType": "double",
                "sourceColumn": "CustomerPastDue61To90",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerPastDueOver90",
                "dataType": "double",
                "sourceColumn": "CustomerPastDueOver90",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "CustomerNetSales365",
                "dataType": "double",
                "sourceColumn": "CustomerNetSales365",
                "sourceProviderType": "Numeric"
              }
            ],
            "partitions": [
              {
                "name": "CustomerAR",
                "dataView": "full",
                "source": {
                  "query": " SELECT [sales].[CustomerAR].* FROM [sales].[CustomerAR] ",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                }
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": " SELECT [sales].[CustomerAR].* FROM [sales].[CustomerAR] "
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "CustomerAR"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "sales"
              }
            ]
          },
          {
            "name": "DeliveryDetail",
            "columns": [
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "OnTimeDeliveryCount",
                "dataType": "int64",
                "sourceColumn": "OnTimeDeliveryCount",
                "sourceProviderType": "Integer"
              },
              {
                "name": "DeliveryCount",
                "dataType": "int64",
                "sourceColumn": "DeliveryCount",
                "sourceProviderType": "Integer"
              }
            ],
            "partitions": [
              {
                "name": "DeliveryDetail",
                "dataView": "full",
                "source": {
                  "query": " SELECT [sales].[DeliveryDetail].* FROM [sales].[DeliveryDetail] ",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                }
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": " SELECT [sales].[DeliveryDetail].* FROM [sales].[DeliveryDetail] "
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "DeliveryDetail"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "sales"
              }
            ]
          },
          {
            "name": "MemoSummary",
            "columns": [
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "MemoReasonCode",
                "dataType": "string",
                "sourceColumn": "MemoReasonCode",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "MemoReasonType",
                "dataType": "string",
                "sourceColumn": "MemoReasonType",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "MemoReasonName",
                "dataType": "string",
                "sourceColumn": "MemoReasonName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "MemoReasonGroupName",
                "dataType": "string",
                "sourceColumn": "MemoReasonGroupName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "MemoReasonParentName",
                "dataType": "string",
                "sourceColumn": "MemoReasonParentName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "NetMemoAmount",
                "dataType": "double",
                "sourceColumn": "NetMemoAmount",
                "sourceProviderType": "Decimal"
              },
              {
                "type": "calculated",
                "name": "MemoMasterParent",
                "dataType": "string",
                "isDataTypeInferred": true,
                "expression": " if(MemoSummary[MemoReasonParentName] = \"Operational\",\"Operational\",\"Non-Operational\")"
              }
            ],
            "partitions": [
              {
                "name": "PY Memo",
                "source": {
                  "query": [
                    "select distinct t3.KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                    ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                    "when MemoReasonType='D' then 'Debit'",
                    "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                    ",[MemoReasonName]",
                    ",[MemoReasonGroupName]",
                    ",[MemoReasonParentName]",
                    ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                    "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                    "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                    "join dimensions.KeHEFiscalCalendar t4 on t3.KeHeFiscalWeekNumber=t4.KeheFiscalWeekNumber",
                    "where PYLast52Weeks = 1",
                    "group by t3.KeHEFiscalWeekNumber,DCItemNumber",
                    ",DcCustomerAddress,t1.MemoReasonCode,",
                    "MemoReasonType",
                    ",[MemoReasonName]",
                    ",[MemoReasonGroupName]",
                    ",[MemoReasonParentName]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct t3.KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                      ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                      "when MemoReasonType='D' then 'Debit'",
                      "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                      ",[MemoReasonName]",
                      ",[MemoReasonGroupName]",
                      ",[MemoReasonParentName]",
                      ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                      "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                      "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                      "join dimensions.KeHEFiscalCalendar t4 on t3.KeHeFiscalWeekNumber=t4.KeheFiscalWeekNumber",
                      "where PYLast52Weeks = 1",
                      "group by t3.KeHEFiscalWeekNumber,DCItemNumber",
                      ",DcCustomerAddress,t1.MemoReasonCode,",
                      "MemoReasonType",
                      ",[MemoReasonName]",
                      ",[MemoReasonGroupName]",
                      ",[MemoReasonParentName]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Memo",
                "mode": "import",
                "source": {
                  "query": [
                    "select distinct t3.KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                    ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                    "when MemoReasonType='D' then 'Debit'",
                    "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                    ",[MemoReasonName]",
                    ",[MemoReasonGroupName]",
                    ",[MemoReasonParentName]",
                    ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                    "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                    "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                    "join dimensions.KeHEFiscalCalendar t4 on t3.KeHeFiscalWeekNumber=t4.KeheFiscalWeekNumber",
                    "where CYLast52Weeks = 1",
                    "group by t3.KeHEFiscalWeekNumber,DCItemNumber",
                    ",DcCustomerAddress,t1.MemoReasonCode,",
                    "MemoReasonType",
                    ",[MemoReasonName]",
                    ",[MemoReasonGroupName]",
                    ",[MemoReasonParentName]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct t3.KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                      ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                      "when MemoReasonType='D' then 'Debit'",
                      "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                      ",[MemoReasonName]",
                      ",[MemoReasonGroupName]",
                      ",[MemoReasonParentName]",
                      ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                      "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                      "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                      "join dimensions.KeHEFiscalCalendar t4 on t3.KeHeFiscalWeekNumber=t4.KeheFiscalWeekNumber",
                      "where CYLast52Weeks = 1",
                      "group by t3.KeHEFiscalWeekNumber,DCItemNumber",
                      ",DcCustomerAddress,t1.MemoReasonCode,",
                      "MemoReasonType",
                      ",[MemoReasonName]",
                      ",[MemoReasonGroupName]",
                      ",[MemoReasonParentName]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select distinct KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                  ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                  "when MemoReasonType='D' then 'Debit'",
                  "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                  ",[MemoReasonName]",
                  ",[MemoReasonGroupName]",
                  ",[MemoReasonParentName]",
                  ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                  "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                  "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                  "group by KeHEFiscalWeekNumber,DCItemNumber",
                  ",DcCustomerAddress,t1.MemoReasonCode,",
                  "MemoReasonType",
                  ",[MemoReasonName]",
                  ",[MemoReasonGroupName]",
                  ",[MemoReasonParentName]"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "MemoSummary"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct KeHEFiscalWeekNumber,DcCustomerAddress,DcItemNumber",
                  ",t1.MemoReasonCode,case when [MemoReasonType] = 'C' then 'Credit'",
                  "when MemoReasonType='D' then 'Debit'",
                  "when MemoReasonType='A' then 'Allowance' else 'Other' end as MemoReasonType",
                  ",[MemoReasonName]",
                  ",[MemoReasonGroupName]",
                  ",[MemoReasonParentName]",
                  ",sum(NetMemoAmount) as NetMemoAmount from sales.MemoDetail t1",
                  "join [Dimensions].[MemoReason] t2 on t1.MemoReasonCode=t2.MemoReasonCode",
                  "join Dimensions.KeHEFiscalDates t3 on t1.ARUpdateDate=t3.DateId",
                  "where KeHEFiscalYear = 2017 and KeHEFiscalQuarter = 3",
                  "group by KeHEFiscalWeekNumber,DCItemNumber",
                  ",DcCustomerAddress,t1.MemoReasonCode,",
                  "MemoReasonType",
                  ",[MemoReasonName]",
                  ",[MemoReasonGroupName]",
                  ",[MemoReasonParentName]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "InvalidSummary",
            "columns": [
              {
                "name": "CustomerWeek",
                "dataType": "string",
                "sourceColumn": "CustomerWeek",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "ReasonName",
                "dataType": "string",
                "sourceColumn": "ReasonName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "InvalidWholesaleRequested",
                "dataType": "double",
                "sourceColumn": "InvalidWholesaleRequested",
                "sourceProviderType": "Decimal"
              }
            ],
            "partitions": [
              {
                "name": "CY Q1 Invalid",
                "source": {
                  "query": [
                    "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                    ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                    "from",
                    "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                    ",sum(QuantityRequested) as InvalidWholesaleRequested",
                    "from [Sales].[InvalidSalesOrderLine] t1",
                    "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                    "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                    "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                    "where CYLast52Weeks = 1 ",
                    "and t5.KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                    "and dateadd(day,-273,cast(getdate() as date))",
                    "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                    "union all",
                    "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                    ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                    "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                    "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                    ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                    "from summary.CustomerItemWeeklySalesSummary s1",
                    "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and s5.KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                    "and dateadd(day,-273,cast(getdate() as date)) and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                    ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                    "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                      ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                      "from",
                      "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                      ",sum(QuantityRequested) as InvalidWholesaleRequested",
                      "from [Sales].[InvalidSalesOrderLine] t1",
                      "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                      "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                      "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                      "where CYLast52Weeks = 1 ",
                      "and t5.KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                      "and dateadd(day,-273,cast(getdate() as date))",
                      "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                      "union all",
                      "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                      ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                      "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                      "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                      ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                      "from summary.CustomerItemWeeklySalesSummary s1",
                      "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and s5.KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                      "and dateadd(day,-273,cast(getdate() as date)) and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                      ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                      "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q2 Invalid",
                "mode": "import",
                "source": {
                  "query": [
                    "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                    ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                    "from",
                    "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                    ",sum(QuantityRequested) as InvalidWholesaleRequested",
                    "from [Sales].[InvalidSalesOrderLine] t1",
                    "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                    "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                    "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                    "where CYLast52Weeks = 1 ",
                    "and t5.KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                    "and dateadd(day,-182,cast(getdate() as date))",
                    "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                    "union all",
                    "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                    ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                    "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                    "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                    ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                    "from summary.CustomerItemWeeklySalesSummary s1",
                    "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and s5.KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                    "and dateadd(day,-182,cast(getdate() as date)) and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                    ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                    "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                      ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                      "from",
                      "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                      ",sum(QuantityRequested) as InvalidWholesaleRequested",
                      "from [Sales].[InvalidSalesOrderLine] t1",
                      "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                      "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                      "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                      "where CYLast52Weeks = 1 ",
                      "and t5.KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                      "and dateadd(day,-182,cast(getdate() as date))",
                      "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                      "union all",
                      "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                      ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                      "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                      "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                      ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                      "from summary.CustomerItemWeeklySalesSummary s1",
                      "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and s5.KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                      "and dateadd(day,-182,cast(getdate() as date)) and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                      ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                      "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q3 Invalid",
                "mode": "import",
                "source": {
                  "query": [
                    "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                    ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                    "from",
                    "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                    ",sum(QuantityRequested) as InvalidWholesaleRequested",
                    "from [Sales].[InvalidSalesOrderLine] t1",
                    "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                    "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                    "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 0",
                    "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                    "union all",
                    "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                    ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                    "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                    "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                    ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                    "from summary.CustomerItemWeeklySalesSummary s1",
                    "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 0",
                    "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                    ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                    "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                      ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                      "from",
                      "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                      ",sum(QuantityRequested) as InvalidWholesaleRequested",
                      "from [Sales].[InvalidSalesOrderLine] t1",
                      "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                      "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                      "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 0",
                      "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                      "union all",
                      "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                      ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                      "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                      "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                      ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                      "from summary.CustomerItemWeeklySalesSummary s1",
                      "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 0",
                      "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                      ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                      "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q4 Invalid",
                "mode": "import",
                "source": {
                  "query": [
                    "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                    ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                    "from",
                    "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                    ",sum(QuantityRequested) as InvalidWholesaleRequested",
                    "from [Sales].[InvalidSalesOrderLine] t1",
                    "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                    "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                    "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 1",
                    "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                    "union all",
                    "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                    ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                    "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                    "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                    ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                    "from summary.CustomerItemWeeklySalesSummary s1",
                    "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 1",
                    "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                    ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                    "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                      ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                      "from",
                      "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                      ",sum(QuantityRequested) as InvalidWholesaleRequested",
                      "from [Sales].[InvalidSalesOrderLine] t1",
                      "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                      "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                      "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 1",
                      "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                      "union all",
                      "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                      ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                      "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                      "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                      ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                      "from summary.CustomerItemWeeklySalesSummary s1",
                      "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 1",
                      "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                      ") #q  join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                      "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek,#q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                  ",sum(InvalidWholesaleRequested) as InvalidWholesaleRequested",
                  "from",
                  "(Select DcCustomerAddress,t1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                  ",sum(QuantityRequested*[WholesalePriceEach]) as InvalidWholesaleRequested",
                  "from [Sales].[InvalidSalesOrderLine] t1",
                  "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                  "join item.DcItem t3 on t1.DcItemNumber=t3.DcItemNumber",
                  "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                  "group by DcCustomerAddress,t1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,InvalidItemReasonName",
                  "union all",
                  "Select [SoldToCustomerAddressNum] as DcCustomerAddress,s1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate",
                  ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                  "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                  "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                  ",sum(QuantityRequested*[WholesalePriceEach]) as InvalidWholesaleRequested",
                  "from sales.SalesOrderDetail s1",
                  "join Dimensions.KeHEFiscalDates s2 on InvoiceDate=DateId",
                  "join item.DcItem s3 on s1.DcItemNumber=s3.DcItemNumber",
                  "where (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                  "group by [SoldToCustomerAddressNum],s1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,OutOfStockReasonCode,ItemNotation) #q",
                  "join customer.Customer a1 on #q.DcCustomerAddress=a1.DcCustomerAddress",
                  "join customer.EntityBannerChain a2 on a1.DcChainCode=a2.DcChainCode where ReasonName <> 'ACTIVE'",
                  "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "InvalidSummary"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek,#q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                  ",sum(InvalidWholesaleRequested) as InvalidWholesaleRequested",
                  "from",
                  "(Select DcCustomerAddress,t1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                  ",sum(QuantityRequested*[WholesalePriceEach]) as InvalidWholesaleRequested",
                  "from [Sales].[InvalidSalesOrderLine] t1",
                  "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                  "join item.DcItem t3 on t1.DcItemNumber=t3.DcItemNumber",
                  "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                  "group by DcCustomerAddress,t1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,InvalidItemReasonName",
                  "union all",
                  "Select [SoldToCustomerAddressNum] as DcCustomerAddress,s1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate",
                  ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                  "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                  "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                  ",sum(QuantityRequested*[WholesalePriceEach]) as InvalidWholesaleRequested",
                  "from sales.SalesOrderDetail s1",
                  "join Dimensions.KeHEFiscalDates s2 on InvoiceDate=DateId",
                  "join item.DcItem s3 on s1.DcItemNumber=s3.DcItemNumber",
                  "where (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                  "group by [SoldToCustomerAddressNum],s1.DcItemNumber,KeHEFiscalWeekNumber,KeHEFiscalWeek,KeHEFiscalPeriod,KeHEFiscalYearEndDate,OutOfStockReasonCode,ItemNotation) #q",
                  "join customer.Customer a1 on #q.DcCustomerAddress=a1.DcCustomerAddress",
                  "join customer.EntityBannerChain a2 on a1.DcChainCode=a2.DcChainCode where ReasonName <> 'ACTIVE'",
                  "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "SalesSummary",
            "columns": [
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "CustomerSubTypeCode",
                "dataType": "string",
                "sourceColumn": "CustomerSubTypeCode",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcVendorNumber",
                "dataType": "string",
                "sourceColumn": "DcVendorNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "UPCNumber",
                "dataType": "double",
                "sourceColumn": "UPCNumber",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "DrivingIssue",
                "dataType": "string",
                "sourceColumn": "DrivingIssue",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "OutOfStockReasonCode",
                "dataType": "string",
                "sourceColumn": "OutOfStockReasonCode",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "ItemNotation",
                "dataType": "string",
                "sourceColumn": "ItemNotation",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "WeeklyQuantityOrdered",
                "dataType": "double",
                "sourceColumn": "WeeklyQuantityOrdered",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyQuantityShipped",
                "dataType": "double",
                "sourceColumn": "WeeklyQuantityShipped",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyOrderedListDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyOrderedListDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyShippedListDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyShippedListDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyOrderedGrossDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyOrderedGrossDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyShippedGrossDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyShippedGrossDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklySalesCOGS",
                "dataType": "double",
                "sourceColumn": "WeeklySalesCOGS",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyTotalDiscountDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyTotalDiscountDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyNetInvoiceDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyNetInvoiceDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "type": "calculated",
                "name": "PODFactor",
                "dataType": "string",
                "isDataTypeInferred": true,
                "expression": "concatenate(SalesSummary[DcCustomerAddress],SalesSummary[DcItemNumber])"
              }
            ],
            "partitions": [
              {
                "name": "PY Q1 Sales",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where PYLast52Weeks = 1 ",
                    "and KeHEFiscalWeekEndDate between dateadd(day,-728,cast(getdate() as date)) ",
                    "and dateadd(day,-637,cast(getdate() as date))"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where PYLast52Weeks = 1 ",
                      "and KeHEFiscalWeekEndDate between dateadd(day,-728,cast(getdate() as date)) ",
                      "and dateadd(day,-637,cast(getdate() as date))</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "PY Q2 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where PYLast52Weeks = 1 ",
                    "and KeHEFiscalWeekEndDate between dateadd(day,-637,cast(getdate() as date)) ",
                    "and dateadd(day,-546,cast(getdate() as date))"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where PYLast52Weeks = 1 ",
                      "and KeHEFiscalWeekEndDate between dateadd(day,-637,cast(getdate() as date)) ",
                      "and dateadd(day,-546,cast(getdate() as date))</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "PY Q3 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where PYLast52Weeks = 1 ",
                    "and PYLast26Weeks = 1",
                    "and PYLast13Weeks = 0"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where PYLast52Weeks = 1 ",
                      "and PYLast26Weeks = 1",
                      "and PYLast13Weeks = 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "PY Q4 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where PYLast52Weeks = 1 ",
                    "and PYLast26Weeks = 1",
                    "and PYLast13Weeks = 1"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where PYLast52Weeks = 1 ",
                      "and PYLast26Weeks = 1",
                      "and PYLast13Weeks = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q1 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                    "and dateadd(day,-273,cast(getdate() as date))"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and KeHEFiscalWeekEndDate between dateadd(day,-364,cast(getdate() as date)) ",
                      "and dateadd(day,-273,cast(getdate() as date))</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q2 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                    "and dateadd(day,-182,cast(getdate() as date))"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and KeHEFiscalWeekEndDate between dateadd(day,-273,cast(getdate() as date)) ",
                      "and dateadd(day,-182,cast(getdate() as date))</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q3 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 0"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              },
              {
                "name": "CY Q4 Sales",
                "mode": "import",
                "source": {
                  "query": [
                    "SELECT t1.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "where CYLast52Weeks = 1 ",
                    "and CYLast26Weeks = 1",
                    "and CYLast13Weeks = 1"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "where CYLast52Weeks = 1 ",
                      "and CYLast26Weeks = 1",
                      "and CYLast13Weeks = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT t1.[KeHEFiscalWeekNumber]",
                  ",[Dc]",
                  ",[DcCustomerAddress]",
                  ",[CustomerSubTypeCode]",
                  ",[DcVendorNumber]",
                  ",[DcItemNumber]",
                  ",[UPCNumber]",
                  ",[DrivingIssue]",
                  ",[OutOfStockReasonCode]",
                  ",[ItemNotation]",
                  ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                  ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                  ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                  ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                  ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                  ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                  ",[WeeklySalesCOGS]",
                  ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                  ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                  "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                  "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                  "where PYLast52Weeks = 1 ",
                  "and KeHEFiscalWeekEndDate between dateadd(day,-728,cast(getdate() as date)) ",
                  "and dateadd(day,-637,cast(getdate() as date))"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "SalesSummary"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.[KeHEFiscalWeekNumber]",
                  ",[Dc]",
                  ",[DcCustomerAddress]",
                  ",[CustomerSubTypeCode]",
                  ",[DcVendorNumber]",
                  ",[DcItemNumber]",
                  ",[UPCNumber]",
                  ",[DrivingIssue]",
                  ",[OutOfStockReasonCode]",
                  ",[ItemNotation]",
                  ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                  ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                  ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                  ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                  ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                  ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                  ",[WeeklySalesCOGS]",
                  ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                  ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                  "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                  "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                  "where PYLast52Weeks = 1 ",
                  "and KeHEFiscalWeekEndDate between dateadd(day,-728,cast(getdate() as date)) ",
                  "and dateadd(day,-637,cast(getdate() as date))</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "StoreSection",
            "columns": [
              {
                "name": "StoreSectionId",
                "dataType": "int64",
                "sourceColumn": "StoreSectionId",
                "sourceProviderType": "Integer"
              },
              {
                "name": "StoreSectionName",
                "dataType": "string",
                "sourceColumn": "StoreSectionName",
                "sourceProviderType": "Char"
              }
            ],
            "partitions": [
              {
                "name": "StoreSection",
                "dataView": "full",
                "source": {
                  "query": " SELECT [Dimensions].[StoreSection].* FROM [Dimensions].[StoreSection] ",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                }
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": " SELECT [Dimensions].[StoreSection].* FROM [Dimensions].[StoreSection] "
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "StoreSection"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "Dimensions"
              }
            ]
          },
          {
            "name": "WeeklySalesBudget",
            "columns": [
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcCustomerAddressNum",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddressNum",
                "sourceProviderType": "Char"
              },
              {
                "name": "StoreSectionId",
                "dataType": "int64",
                "sourceColumn": "StoreSectionId",
                "sourceProviderType": "Integer"
              },
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "BudgetGrossSalesDollars",
                "dataType": "double",
                "sourceColumn": "BudgetGrossSalesDollars",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "BudgetGrossCOGS",
                "dataType": "double",
                "sourceColumn": "BudgetGrossCOGS",
                "sourceProviderType": "Numeric"
              }
            ],
            "partitions": [
              {
                "name": "WeeklySalesBudget",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT [sales].[WeeklySalesBudget].* FROM [sales].[WeeklySalesBudget]",
                    "where BudgetGrossSalesDollars <> 0"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[WeeklySalesBudget].* FROM [sales].[WeeklySalesBudget]",
                      "where BudgetGrossSalesDollars <> 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT [sales].[WeeklySalesBudget].* FROM [sales].[WeeklySalesBudget]",
                  "where BudgetGrossSalesDollars <> 0"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "WeeklySalesBudget"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "sales"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [sales].[WeeklySalesBudget].* FROM [sales].[WeeklySalesBudget]",
                  "where BudgetGrossSalesDollars <> 0</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "DcVendorItemMaster",
            "columns": [
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcVendorNumber",
                "dataType": "string",
                "sourceColumn": "DcVendorNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "CorporateItemNumber",
                "dataType": "string",
                "sourceColumn": "CorporateItemNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "UPCAsString",
                "dataType": "string",
                "sourceColumn": "UPCAsString",
                "sourceProviderType": "Char"
              },
              {
                "name": "UPC",
                "dataType": "double",
                "sourceColumn": "UPC",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "TempZoneCode",
                "dataType": "string",
                "sourceColumn": "TempZoneCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "TempZone",
                "dataType": "string",
                "sourceColumn": "TempZone",
                "sourceProviderType": "Char"
              },
              {
                "name": "ShelfLifeDays",
                "dataType": "double",
                "sourceColumn": "ShelfLifeDays",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "StoreSectionId",
                "dataType": "int64",
                "sourceColumn": "StoreSectionId",
                "sourceProviderType": "Boolean"
              },
              {
                "name": "ShelfLifeGroup",
                "dataType": "string",
                "sourceColumn": "ShelfLifeGroup",
                "sourceProviderType": "Char"
              },
              {
                "name": "L1DivisionLabel",
                "dataType": "string",
                "sourceColumn": "L1DivisionLabel",
                "sourceProviderType": "Char"
              },
              {
                "name": "L2SubDivisionLabel",
                "dataType": "string",
                "sourceColumn": "L2SubDivisionLabel",
                "sourceProviderType": "Char"
              },
              {
                "name": "L3ItemCategoryLabel",
                "dataType": "string",
                "sourceColumn": "L3ItemCategoryLabel",
                "sourceProviderType": "Char"
              },
              {
                "name": "L4ItemSubCategoryLabel",
                "dataType": "string",
                "sourceColumn": "L4ItemSubCategoryLabel",
                "sourceProviderType": "Char"
              },
              {
                "name": "L5ItemClassLabel",
                "dataType": "string",
                "sourceColumn": "L5ItemClassLabel",
                "sourceProviderType": "Char"
              },
              {
                "name": "BuyerID",
                "dataType": "string",
                "sourceColumn": "BuyerID",
                "sourceProviderType": "Char"
              },
              {
                "name": "BuyerName",
                "dataType": "string",
                "sourceColumn": "BuyerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "BuyerGroup",
                "dataType": "string",
                "sourceColumn": "BuyerGroup",
                "sourceProviderType": "Char"
              },
              {
                "name": "DemandPlannerName",
                "dataType": "string",
                "sourceColumn": "DemandPlannerName",
                "sourceProviderType": "Char"
              },
              {
                "name": "Category1",
                "dataType": "string",
                "sourceColumn": "Category1",
                "sourceProviderType": "Char"
              },
              {
                "name": "Category2",
                "dataType": "string",
                "sourceColumn": "Category2",
                "sourceProviderType": "Char"
              },
              {
                "name": "Category3",
                "dataType": "string",
                "sourceColumn": "Category3",
                "sourceProviderType": "Char"
              },
              {
                "name": "Category4",
                "dataType": "string",
                "sourceColumn": "Category4",
                "sourceProviderType": "Char"
              },
              {
                "name": "ItemDesc",
                "dataType": "string",
                "sourceColumn": "ItemDesc",
                "sourceProviderType": "Char"
              },
              {
                "name": "Size",
                "dataType": "double",
                "sourceColumn": "Size",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "UOMCode",
                "dataType": "string",
                "sourceColumn": "UOMCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "CasePackFactorQty",
                "dataType": "double",
                "sourceColumn": "CasePackFactorQty",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "ReasonCode",
                "dataType": "string",
                "sourceColumn": "ReasonCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "Note",
                "dataType": "string",
                "sourceColumn": "Note",
                "sourceProviderType": "Char"
              },
              {
                "name": "LeadTimeDays",
                "dataType": "int64",
                "sourceColumn": "LeadTimeDays",
                "sourceProviderType": "Integer"
              },
              {
                "name": "MonterreyFlag",
                "dataType": "string",
                "sourceColumn": "MonterreyFlag",
                "sourceProviderType": "Char"
              },
              {
                "name": "SeasonalityFlag",
                "dataType": "string",
                "sourceColumn": "SeasonalityFlag",
                "sourceProviderType": "Char"
              },
              {
                "name": "SCodeFlag",
                "dataType": "string",
                "sourceColumn": "SCodeFlag",
                "sourceProviderType": "Char"
              },
              {
                "name": "ItemStratificationIndicator",
                "dataType": "string",
                "sourceColumn": "ItemStratificationIndicator",
                "sourceProviderType": "Char"
              },
              {
                "name": "GBBScore",
                "dataType": "string",
                "sourceColumn": "GBBScore",
                "sourceProviderType": "Char"
              },
              {
                "name": "Esn",
                "dataType": "int64",
                "sourceColumn": "Esn",
                "sourceProviderType": "Integer"
              },
              {
                "name": "Name",
                "dataType": "string",
                "sourceColumn": "Name",
                "sourceProviderType": "Char"
              },
              {
                "name": "VendorNumber",
                "dataType": "string",
                "sourceColumn": "VendorNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "VendorSpoilageSupport",
                "dataType": "string",
                "sourceColumn": "VendorSpoilageSupport",
                "sourceProviderType": "Char"
              },
              {
                "name": "SpoilageAllowancePercentage",
                "dataType": "double",
                "sourceColumn": "SpoilageAllowancePercentage",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "PrepaidCode",
                "dataType": "string",
                "sourceColumn": "PrepaidCode",
                "sourceProviderType": "Char"
              },
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "Char"
              },
              {
                "name": "RegionName",
                "dataType": "string",
                "sourceColumn": "RegionName",
                "sourceProviderType": "Char"
              },
              {
                "name": "DcName",
                "dataType": "string",
                "sourceColumn": "DcName",
                "sourceProviderType": "Char"
              },
              {
                "name": "DeliveredJobberCost",
                "dataType": "double",
                "sourceColumn": "DeliveredJobberCost",
                "sourceProviderType": "Numeric"
              },
              {
                "name": "FirstReceiptDate",
                "dataType": "int64",
                "sourceColumn": "FirstReceiptDate"
              },
              {
                "name": "LastReceiptDate",
                "dataType": "int64",
                "sourceColumn": "LastReceiptDate"
              },
              {
                "name": "GBBTierNumber",
                "dataType": "int64",
                "sourceColumn": "GBBTierNumber"
              },
              {
                "name": "IsMonterry",
                "dataType": "boolean",
                "sourceColumn": "IsMonterry"
              },
              {
                "name": "GBBTier",
                "dataType": "string",
                "sourceColumn": "GBBTier"
              },
              {
                "name": "JobberCost",
                "dataType": "double",
                "sourceColumn": "JobberCost"
              },
              {
                "name": "WholesalePriceEach",
                "dataType": "double",
                "sourceColumn": "WholesalePriceEach"
              },
              {
                "type": "calculated",
                "name": "UpcDescription",
                "dataType": "string",
                "isDataTypeInferred": true,
                "expression": "DcVendorItemMaster[UPCAsString]&\" - \"&DcVendorItemMaster[ItemDesc]"
              }
            ],
            "partitions": [
              {
                "name": "DcVendorItemMaster",
                "dataView": "full",
                "source": {
                  "query": [
                    "select t1.[DcItemNumber]",
                    ",t1.[DcVendorNumber]",
                    ",t1.[CorporateItemNumber]",
                    ",0 as [FirstReceiptDate]",
                    ",0 as LastReceiptDate",
                    ",t2.[UPCAsString]",
                    ",t2.[UPC]",
                    ",t2.[TempZoneCode]",
                    ",case when t2.[TempZoneCode] = 'R' then 'RFG' else case when t2.[TempZoneCode] in ('X','P') then 'FRZ' else 'DRY' end end as TempZone",
                    ",t2.[ShelfLifeDays]",
                    ",case when t2.[ShelfLifeDays] <= 4 then 'A. 1-4 Days' else",
                    " case when t2.[ShelfLifeDays] <= 14 then 'B. 5-14 Days' else",
                    " case when t2.[ShelfLifeDays] <= 30 then 'C. 15-30 Days' else",
                    " case when t2.[ShelfLifeDays] <= 45 then 'D. 31-45 Days' else",
                    " case when t2.[ShelfLifeDays] <= 90 then 'E. 46-90 Days' else",
                    " case when t2.[ShelfLifeDays] <= 120 then 'F. 91-120 Days' else",
                    " case when t2.[ShelfLifeDays] <= 180 then 'G. 121-180 Days' else 'H. 181+' end end end end end end end as ShelfLifeGroup",
                    ",case when [L1DivisionLabel]\t\tis null then ' ' else [L1DivisionLabel]\t\t\tend as [L1DivisionLabel] ",
                    ",case when [L2SubDivisionLabel] \tis null then ' ' else [L2SubDivisionLabel] \t\tend as [L2SubDivisionLabel] ",
                    ",case when [L3ItemCategoryLabel]\tis null then ' ' else [L3ItemCategoryLabel]\t\tend as [L3ItemCategoryLabel]",
                    ",case when [L4ItemSubCategoryLabel]\tis null then ' ' else [L4ItemSubCategoryLabel]\tend as [L4ItemSubCategoryLabel]",
                    ",case when [L5ItemClassLabel]\t\tis null then ' ' else [L5ItemClassLabel]\t\tend as [L5ItemClassLabel]\t\t\t\t\t",
                    ",t1.BuyerID",
                    ",#t9.BuyerName as BuyerName",
                    ",#t9.BuyerGroup as BuyerGroup",
                    ",t2.[IsMonterry]",
                    ",case when t2.IsMonterry = 1 then 1 else 0 end as StoreSectionId",
                    ",t6.[DemandPlannerName]",
                    ",t2.[Category1]",
                    ",t2.[Category2]",
                    ",t2.[Category3]",
                    ",t2.[Category4]",
                    ",t2.[ItemDesc]",
                    ",t2.[Size]",
                    ",t2.[UOMCode]",
                    ",CasePackFactorQty",
                    ",ReasonCode",
                    ",Note",
                    ",LeadTimeDays",
                    ",case when t2.[IsMonterry] = 1 then 'Y' else 'N' end as MonterreyFlag",
                    ",case when t7.SeasonalityIndicator = 1 then 'Y' else 'N' end as SeasonalityFlag",
                    ",case when t1.ReasonCode = 'S' then 'Y' else 'N' end as SCodeFlag",
                    ",case when t8.[ItemStratificationIndicator] is null then 'NA' else ItemStratificationIndicator end as ItemStratificationIndicator",
                    ",GBBScore",
                    ",GBBTier",
                    "     ,case when GBBTier = 'BEST' then 1",
                    "\t when GBBTier = 'BETTER' then 2",
                    "\t when GBBTier = 'GOOD' then 3",
                    "\t when GBBTier = 'NEW' then 4",
                    "\t when GBBTier = 'RETAILER PL' then 5",
                    "\t when GBBTier = 'CAREtrade' then 6",
                    "\t else 7 end as GBBTierNumber",
                    ",t3.[Esn] ",
                    ",t4.[Name]",
                    ",t3.VendorNumber",
                    ",case when t4.SpoilageAllowanceFlag = 'Y' then 'FULL' else 'NOT FULL' end  as VendorSpoilageSupport",
                    ",case when t4.SpoilageAllowanceFlag = 'Y' then NULL else t3.SpoilageAllowancePercentage end as SpoilageAllowancePercentage",
                    ",PrepaidCode",
                    ",t1.[Dc]",
                    ",t5.[RegionName]",
                    ",substring(t5.DcName,13,50) as DcName",
                    ",t1.DeliveredJobberCost",
                    ",JobberCost",
                    ",WholesalePriceEach",
                    "from item.dcitem t1",
                    "join item.item t2 on t1.[CorporateItemNumber] = t2.[CorporateItemNumber]",
                    "left join vendor.dcvendor t3 on t1.[DcVendorNumber] = t3.[DcVendorNumber]",
                    "left join vendor.vendormaster t4 on t3.esn = t4.esn",
                    "join aom.dc t5 on t1.dc = t5.dc",
                    "left join [Dimensions].[DemandPlannerCodeName] t6 on t1.dc = t6.dc",
                    "left join [item].[ItemSeasonality] t7 on t1.DcItemNumber = t7.DcItemNumber",
                    "left join item.E3ExtendedItem t8 on t1.DcItemNumber = t8.DcItemNumber",
                    "left join (select substring(DcBuyerCode,1,3) as Dc,BuyerCode as BuyerId,BuyerName,BuyerGroupName as BuyerGroup from Dimensions.BuyerCodeName ",
                    "group by DcBuyerCode,BuyerCode,BuyerName,BuyerGroupName) #t9 on t1.BuyerID=#t9.BuyerId and t1.Dc=#t9.Dc",
                    "left join (select CorporateItemNumber,cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey ",
                    "from item.Item)#cat on t2.CorporateItemNumber=#cat.CorporateItemNumber",
                    "left join (select cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey,",
                    "[L1DivisionLabel],[L2SubDivisionLabel],[L3ItemCategoryLabel],[L4ItemSubCategoryLabel],[L5ItemClassLabel] from [Dimensions].[CategoryCodeLabels]) #cat2 on #cat.CategoryKey=#cat2.CategoryKey"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select t1.[DcItemNumber]",
                      ",t1.[DcVendorNumber]",
                      ",t1.[CorporateItemNumber]",
                      ",0 as [FirstReceiptDate]",
                      ",0 as LastReceiptDate",
                      ",t2.[UPCAsString]",
                      ",t2.[UPC]",
                      ",t2.[TempZoneCode]",
                      ",case when t2.[TempZoneCode] = 'R' then 'RFG' else case when t2.[TempZoneCode] in ('X','P') then 'FRZ' else 'DRY' end end as TempZone",
                      ",t2.[ShelfLifeDays]",
                      ",case when t2.[ShelfLifeDays] <= 4 then 'A. 1-4 Days' else",
                      " case when t2.[ShelfLifeDays] <= 14 then 'B. 5-14 Days' else",
                      " case when t2.[ShelfLifeDays] <= 30 then 'C. 15-30 Days' else",
                      " case when t2.[ShelfLifeDays] <= 45 then 'D. 31-45 Days' else",
                      " case when t2.[ShelfLifeDays] <= 90 then 'E. 46-90 Days' else",
                      " case when t2.[ShelfLifeDays] <= 120 then 'F. 91-120 Days' else",
                      " case when t2.[ShelfLifeDays] <= 180 then 'G. 121-180 Days' else 'H. 181+' end end end end end end end as ShelfLifeGroup",
                      ",case when [L1DivisionLabel]\t\tis null then ' ' else [L1DivisionLabel]\t\t\tend as [L1DivisionLabel] ",
                      ",case when [L2SubDivisionLabel] \tis null then ' ' else [L2SubDivisionLabel] \t\tend as [L2SubDivisionLabel] ",
                      ",case when [L3ItemCategoryLabel]\tis null then ' ' else [L3ItemCategoryLabel]\t\tend as [L3ItemCategoryLabel]",
                      ",case when [L4ItemSubCategoryLabel]\tis null then ' ' else [L4ItemSubCategoryLabel]\tend as [L4ItemSubCategoryLabel]",
                      ",case when [L5ItemClassLabel]\t\tis null then ' ' else [L5ItemClassLabel]\t\tend as [L5ItemClassLabel]\t\t\t\t\t",
                      ",t1.BuyerID",
                      ",#t9.BuyerName as BuyerName",
                      ",#t9.BuyerGroup as BuyerGroup",
                      ",t2.[IsMonterry]",
                      ",case when t2.IsMonterry = 1 then 1 else 0 end as StoreSectionId",
                      ",t6.[DemandPlannerName]",
                      ",t2.[Category1]",
                      ",t2.[Category2]",
                      ",t2.[Category3]",
                      ",t2.[Category4]",
                      ",t2.[ItemDesc]",
                      ",t2.[Size]",
                      ",t2.[UOMCode]",
                      ",CasePackFactorQty",
                      ",ReasonCode",
                      ",Note",
                      ",LeadTimeDays",
                      ",case when t2.[IsMonterry] = 1 then 'Y' else 'N' end as MonterreyFlag",
                      ",case when t7.SeasonalityIndicator = 1 then 'Y' else 'N' end as SeasonalityFlag",
                      ",case when t1.ReasonCode = 'S' then 'Y' else 'N' end as SCodeFlag",
                      ",case when t8.[ItemStratificationIndicator] is null then 'NA' else ItemStratificationIndicator end as ItemStratificationIndicator",
                      ",GBBScore",
                      ",GBBTier",
                      "     ,case when GBBTier = 'BEST' then 1",
                      "\t when GBBTier = 'BETTER' then 2",
                      "\t when GBBTier = 'GOOD' then 3",
                      "\t when GBBTier = 'NEW' then 4",
                      "\t when GBBTier = 'RETAILER PL' then 5",
                      "\t when GBBTier = 'CAREtrade' then 6",
                      "\t else 7 end as GBBTierNumber",
                      ",t3.[Esn] ",
                      ",t4.[Name]",
                      ",t3.VendorNumber",
                      ",case when t4.SpoilageAllowanceFlag = 'Y' then 'FULL' else 'NOT FULL' end  as VendorSpoilageSupport",
                      ",case when t4.SpoilageAllowanceFlag = 'Y' then NULL else t3.SpoilageAllowancePercentage end as SpoilageAllowancePercentage",
                      ",PrepaidCode",
                      ",t1.[Dc]",
                      ",t5.[RegionName]",
                      ",substring(t5.DcName,13,50) as DcName",
                      ",t1.DeliveredJobberCost",
                      ",JobberCost",
                      ",WholesalePriceEach",
                      "from item.dcitem t1",
                      "join item.item t2 on t1.[CorporateItemNumber] = t2.[CorporateItemNumber]",
                      "left join vendor.dcvendor t3 on t1.[DcVendorNumber] = t3.[DcVendorNumber]",
                      "left join vendor.vendormaster t4 on t3.esn = t4.esn",
                      "join aom.dc t5 on t1.dc = t5.dc",
                      "left join [Dimensions].[DemandPlannerCodeName] t6 on t1.dc = t6.dc",
                      "left join [item].[ItemSeasonality] t7 on t1.DcItemNumber = t7.DcItemNumber",
                      "left join item.E3ExtendedItem t8 on t1.DcItemNumber = t8.DcItemNumber",
                      "left join (select substring(DcBuyerCode,1,3) as Dc,BuyerCode as BuyerId,BuyerName,BuyerGroupName as BuyerGroup from Dimensions.BuyerCodeName ",
                      "group by DcBuyerCode,BuyerCode,BuyerName,BuyerGroupName) #t9 on t1.BuyerID=#t9.BuyerId and t1.Dc=#t9.Dc",
                      "left join (select CorporateItemNumber,cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey ",
                      "from item.Item)#cat on t2.CorporateItemNumber=#cat.CorporateItemNumber",
                      "left join (select cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey,",
                      "[L1DivisionLabel],[L2SubDivisionLabel],[L3ItemCategoryLabel],[L4ItemSubCategoryLabel],[L5ItemClassLabel] from [Dimensions].[CategoryCodeLabels]) #cat2 on #cat.CategoryKey=#cat2.CategoryKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select t1.[DcItemNumber]",
                  ",t1.[DcVendorNumber]",
                  ",t1.[CorporateItemNumber]",
                  ",0 as [FirstReceiptDate]",
                  ",0 as LastReceiptDate",
                  ",t2.[UPCAsString]",
                  ",t2.[UPC]",
                  ",t2.[TempZoneCode]",
                  ",case when t2.[TempZoneCode] = 'R' then 'RFG' else case when t2.[TempZoneCode] in ('X','P') then 'FRZ' else 'DRY' end end as TempZone",
                  ",t2.[ShelfLifeDays]",
                  ",case when t2.[ShelfLifeDays] <= 4 then 'A. 1-4 Days' else",
                  " case when t2.[ShelfLifeDays] <= 14 then 'B. 5-14 Days' else",
                  " case when t2.[ShelfLifeDays] <= 30 then 'C. 15-30 Days' else",
                  " case when t2.[ShelfLifeDays] <= 45 then 'D. 31-45 Days' else",
                  " case when t2.[ShelfLifeDays] <= 90 then 'E. 46-90 Days' else",
                  " case when t2.[ShelfLifeDays] <= 120 then 'F. 91-120 Days' else",
                  " case when t2.[ShelfLifeDays] <= 180 then 'G. 121-180 Days' else 'H. 181+' end end end end end end end as ShelfLifeGroup",
                  ",case when [L1DivisionLabel]\t\tis null then ' ' else [L1DivisionLabel]\t\t\tend as [L1DivisionLabel] ",
                  ",case when [L2SubDivisionLabel] \tis null then ' ' else [L2SubDivisionLabel] \t\tend as [L2SubDivisionLabel] ",
                  ",case when [L3ItemCategoryLabel]\tis null then ' ' else [L3ItemCategoryLabel]\t\tend as [L3ItemCategoryLabel]",
                  ",case when [L4ItemSubCategoryLabel]\tis null then ' ' else [L4ItemSubCategoryLabel]\tend as [L4ItemSubCategoryLabel]",
                  ",case when [L5ItemClassLabel]\t\tis null then ' ' else [L5ItemClassLabel]\t\tend as [L5ItemClassLabel]\t\t\t\t\t",
                  ",t1.BuyerID",
                  ",#t9.BuyerName as BuyerName",
                  ",#t9.BuyerGroup as BuyerGroup",
                  ",t2.[IsMonterry]",
                  ",case when t2.IsMonterry = 1 then 1 else 0 end as StoreSectionId",
                  ",t6.[DemandPlannerName]",
                  ",t2.[Category1]",
                  ",t2.[Category2]",
                  ",t2.[Category3]",
                  ",t2.[Category4]",
                  ",t2.[ItemDesc]",
                  ",t2.[Size]",
                  ",t2.[UOMCode]",
                  ",CasePackFactorQty",
                  ",ReasonCode",
                  ",Note",
                  ",LeadTimeDays",
                  ",case when t2.[IsMonterry] = 1 then 'Y' else 'N' end as MonterreyFlag",
                  ",case when t7.SeasonalityIndicator = 1 then 'Y' else 'N' end as SeasonalityFlag",
                  ",case when t1.ReasonCode = 'S' then 'Y' else 'N' end as SCodeFlag",
                  ",case when t8.[ItemStratificationIndicator] is null then 'NA' else ItemStratificationIndicator end as ItemStratificationIndicator",
                  ",GBBScore",
                  ",GBBTier",
                  "     ,case when GBBTier = 'BEST' then 1",
                  "\t when GBBTier = 'BETTER' then 2",
                  "\t when GBBTier = 'GOOD' then 3",
                  "\t when GBBTier = 'NEW' then 4",
                  "\t when GBBTier = 'RETAILER PL' then 5",
                  "\t when GBBTier = 'CAREtrade' then 6",
                  "\t else 7 end as GBBTierNumber",
                  ",t3.[Esn] ",
                  ",t4.[Name]",
                  ",t3.VendorNumber",
                  ",case when t4.SpoilageAllowanceFlag = 'Y' then 'FULL' else 'NOT FULL' end  as VendorSpoilageSupport",
                  ",case when t4.SpoilageAllowanceFlag = 'Y' then NULL else t3.SpoilageAllowancePercentage end as SpoilageAllowancePercentage",
                  ",PrepaidCode",
                  ",t1.[Dc]",
                  ",t5.[RegionName]",
                  ",substring(t5.DcName,13,50) as DcName",
                  ",t1.DeliveredJobberCost",
                  ",JobberCost",
                  ",WholesalePriceEach",
                  "from item.dcitem t1",
                  "join item.item t2 on t1.[CorporateItemNumber] = t2.[CorporateItemNumber]",
                  "left join vendor.dcvendor t3 on t1.[DcVendorNumber] = t3.[DcVendorNumber]",
                  "left join vendor.vendormaster t4 on t3.esn = t4.esn",
                  "join aom.dc t5 on t1.dc = t5.dc",
                  "left join [Dimensions].[DemandPlannerCodeName] t6 on t1.dc = t6.dc",
                  "left join [item].[ItemSeasonality] t7 on t1.DcItemNumber = t7.DcItemNumber",
                  "left join item.E3ExtendedItem t8 on t1.DcItemNumber = t8.DcItemNumber",
                  "left join (select substring(DcBuyerCode,1,3) as Dc,BuyerCode as BuyerId,BuyerName,BuyerGroupName as BuyerGroup from Dimensions.BuyerCodeName ",
                  "group by DcBuyerCode,BuyerCode,BuyerName,BuyerGroupName) #t9 on t1.BuyerID=#t9.BuyerId and t1.Dc=#t9.Dc",
                  "left join (select CorporateItemNumber,cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey ",
                  "from item.Item)#cat on t2.CorporateItemNumber=#cat.CorporateItemNumber",
                  "left join (select cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey,",
                  "[L1DivisionLabel],[L2SubDivisionLabel],[L3ItemCategoryLabel],[L4ItemSubCategoryLabel],[L5ItemClassLabel] from [Dimensions].[CategoryCodeLabels]) #cat2 on #cat.CategoryKey=#cat2.CategoryKey"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "DcVendorItemMaster"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select t1.[DcItemNumber]",
                  ",t1.[DcVendorNumber]",
                  ",t1.[CorporateItemNumber]",
                  ",0 as [FirstReceiptDate]",
                  ",0 as LastReceiptDate",
                  ",t2.[UPCAsString]",
                  ",t2.[UPC]",
                  ",t2.[TempZoneCode]",
                  ",case when t2.[TempZoneCode] = 'R' then 'RFG' else case when t2.[TempZoneCode] in ('X','P') then 'FRZ' else 'DRY' end end as TempZone",
                  ",t2.[ShelfLifeDays]",
                  ",case when t2.[ShelfLifeDays] <= 4 then 'A. 1-4 Days' else",
                  " case when t2.[ShelfLifeDays] <= 14 then 'B. 5-14 Days' else",
                  " case when t2.[ShelfLifeDays] <= 30 then 'C. 15-30 Days' else",
                  " case when t2.[ShelfLifeDays] <= 45 then 'D. 31-45 Days' else",
                  " case when t2.[ShelfLifeDays] <= 90 then 'E. 46-90 Days' else",
                  " case when t2.[ShelfLifeDays] <= 120 then 'F. 91-120 Days' else",
                  " case when t2.[ShelfLifeDays] <= 180 then 'G. 121-180 Days' else 'H. 181+' end end end end end end end as ShelfLifeGroup",
                  ",case when [L1DivisionLabel]\t\tis null then ' ' else [L1DivisionLabel]\t\t\tend as [L1DivisionLabel] ",
                  ",case when [L2SubDivisionLabel] \tis null then ' ' else [L2SubDivisionLabel] \t\tend as [L2SubDivisionLabel] ",
                  ",case when [L3ItemCategoryLabel]\tis null then ' ' else [L3ItemCategoryLabel]\t\tend as [L3ItemCategoryLabel]",
                  ",case when [L4ItemSubCategoryLabel]\tis null then ' ' else [L4ItemSubCategoryLabel]\tend as [L4ItemSubCategoryLabel]",
                  ",case when [L5ItemClassLabel]\t\tis null then ' ' else [L5ItemClassLabel]\t\tend as [L5ItemClassLabel]\t\t\t\t\t",
                  ",t1.BuyerID",
                  ",#t9.BuyerName as BuyerName",
                  ",#t9.BuyerGroup as BuyerGroup",
                  ",t2.[IsMonterry]",
                  ",case when t2.IsMonterry = 1 then 1 else 0 end as StoreSectionId",
                  ",t6.[DemandPlannerName]",
                  ",t2.[Category1]",
                  ",t2.[Category2]",
                  ",t2.[Category3]",
                  ",t2.[Category4]",
                  ",t2.[ItemDesc]",
                  ",t2.[Size]",
                  ",t2.[UOMCode]",
                  ",CasePackFactorQty",
                  ",ReasonCode",
                  ",Note",
                  ",LeadTimeDays",
                  ",case when t2.[IsMonterry] = 1 then 'Y' else 'N' end as MonterreyFlag",
                  ",case when t7.SeasonalityIndicator = 1 then 'Y' else 'N' end as SeasonalityFlag",
                  ",case when t1.ReasonCode = 'S' then 'Y' else 'N' end as SCodeFlag",
                  ",case when t8.[ItemStratificationIndicator] is null then 'NA' else ItemStratificationIndicator end as ItemStratificationIndicator",
                  ",GBBScore",
                  ",GBBTier",
                  "     ,case when GBBTier = 'BEST' then 1",
                  "\t when GBBTier = 'BETTER' then 2",
                  "\t when GBBTier = 'GOOD' then 3",
                  "\t when GBBTier = 'NEW' then 4",
                  "\t when GBBTier = 'RETAILER PL' then 5",
                  "\t when GBBTier = 'CAREtrade' then 6",
                  "\t else 7 end as GBBTierNumber",
                  ",t3.[Esn] ",
                  ",t4.[Name]",
                  ",t3.VendorNumber",
                  ",case when t4.SpoilageAllowanceFlag = 'Y' then 'FULL' else 'NOT FULL' end  as VendorSpoilageSupport",
                  ",case when t4.SpoilageAllowanceFlag = 'Y' then NULL else t3.SpoilageAllowancePercentage end as SpoilageAllowancePercentage",
                  ",PrepaidCode",
                  ",t1.[Dc]",
                  ",t5.[RegionName]",
                  ",substring(t5.DcName,13,50) as DcName",
                  ",t1.DeliveredJobberCost",
                  ",JobberCost",
                  ",WholesalePriceEach",
                  "from item.dcitem t1",
                  "join item.item t2 on t1.[CorporateItemNumber] = t2.[CorporateItemNumber]",
                  "left join vendor.dcvendor t3 on t1.[DcVendorNumber] = t3.[DcVendorNumber]",
                  "left join vendor.vendormaster t4 on t3.esn = t4.esn",
                  "join aom.dc t5 on t1.dc = t5.dc",
                  "left join [Dimensions].[DemandPlannerCodeName] t6 on t1.dc = t6.dc",
                  "left join [item].[ItemSeasonality] t7 on t1.DcItemNumber = t7.DcItemNumber",
                  "left join item.E3ExtendedItem t8 on t1.DcItemNumber = t8.DcItemNumber",
                  "left join (select substring(DcBuyerCode,1,3) as Dc,BuyerCode as BuyerId,BuyerName,BuyerGroupName as BuyerGroup from Dimensions.BuyerCodeName ",
                  "group by DcBuyerCode,BuyerCode,BuyerName,BuyerGroupName) #t9 on t1.BuyerID=#t9.BuyerId and t1.Dc=#t9.Dc",
                  "left join (select CorporateItemNumber,cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey ",
                  "from item.Item)#cat on t2.CorporateItemNumber=#cat.CorporateItemNumber",
                  "left join (select cast([L1DivisionCode]+[L2SubDivisionCode]+[L3ItemCategoryCode]+[L4ItemSubCategoryCode]+[L5ItemClassCode] as char(15)) as CategoryKey,",
                  "[L1DivisionLabel],[L2SubDivisionLabel],[L3ItemCategoryLabel],[L4ItemSubCategoryLabel],[L5ItemClassLabel] from [Dimensions].[CategoryCodeLabels]) #cat2 on #cat.CategoryKey=#cat2.CategoryKey</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "FiscalSlicerDimension",
            "columns": [
              {
                "name": "FiscalSlicerId",
                "dataType": "int64",
                "sourceColumn": "FiscalSlicerId",
                "sourceProviderType": "Integer"
              },
              {
                "name": "FiscalSlicerName",
                "dataType": "string",
                "sourceColumn": "FiscalSlicerName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "NumberOfWeeks",
                "dataType": "string",
                "sourceColumn": "NumberOfWeeks",
                "sourceProviderType": "VarChar"
              }
            ],
            "partitions": [
              {
                "name": "FiscalSlicerDimension",
                "dataView": "full",
                "source": {
                  "query": [
                    "select 1 as FiscalSlicerId,",
                    "'Current Week' as FiscalSlicerName,",
                    "'Last 4' as NumberOfWeeks",
                    "\tunion all",
                    "select 2 as FiscalSlicerId,",
                    "'Current Period' as FiscalSlicerName,",
                    "'Last 13' as NumberOfWeeks",
                    "\tunion all",
                    "select 3 as FiscalSlicerId,",
                    "'Current Quarter' as FiscalSlicerName,",
                    "'Last 26' as NumberOfWeeks",
                    "\tunion all",
                    "select 4 as FiscalSlicerId,",
                    "'Current Year' as FiscalSlicerName,",
                    "'Last 52' as NumberOfWeeks"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 1 as FiscalSlicerId,",
                      "'Current Week' as FiscalSlicerName,",
                      "'Last 4' as NumberOfWeeks",
                      "\tunion all",
                      "select 2 as FiscalSlicerId,",
                      "'Current Period' as FiscalSlicerName,",
                      "'Last 13' as NumberOfWeeks",
                      "\tunion all",
                      "select 3 as FiscalSlicerId,",
                      "'Current Quarter' as FiscalSlicerName,",
                      "'Last 26' as NumberOfWeeks",
                      "\tunion all",
                      "select 4 as FiscalSlicerId,",
                      "'Current Year' as FiscalSlicerName,",
                      "'Last 52' as NumberOfWeeks</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select 1 as FiscalSlicerId,",
                  "'Current Week' as FiscalSlicerName,",
                  "'Last 4' as NumberOfWeeks",
                  "\tunion all",
                  "select 2 as FiscalSlicerId,",
                  "'Current Period' as FiscalSlicerName,",
                  "'Last 13' as NumberOfWeeks",
                  "\tunion all",
                  "select 3 as FiscalSlicerId,",
                  "'Current Quarter' as FiscalSlicerName,",
                  "'Last 26' as NumberOfWeeks",
                  "\tunion all",
                  "select 4 as FiscalSlicerId,",
                  "'Current Year' as FiscalSlicerName,",
                  "'Last 52' as NumberOfWeeks"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "FiscalSlicerDimension"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 1 as FiscalSlicerId,",
                  "'Current Week' as FiscalSlicerName,",
                  "'Last 4' as NumberOfWeeks",
                  "\tunion all",
                  "select 2 as FiscalSlicerId,",
                  "'Current Period' as FiscalSlicerName,",
                  "'Last 13' as NumberOfWeeks",
                  "\tunion all",
                  "select 3 as FiscalSlicerId,",
                  "'Current Quarter' as FiscalSlicerName,",
                  "'Last 26' as NumberOfWeeks",
                  "\tunion all",
                  "select 4 as FiscalSlicerId,",
                  "'Current Year' as FiscalSlicerName,",
                  "'Last 52' as NumberOfWeeks</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "FillRateSlicerDimension",
            "columns": [
              {
                "name": "FillRateType",
                "dataType": "int64",
                "sourceColumn": "FillRateType",
                "sourceProviderType": "Integer"
              },
              {
                "name": "FillRateName",
                "dataType": "string",
                "sourceColumn": "FillRateName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "FillRateDefinition",
                "dataType": "string",
                "sourceColumn": "FillRateDefinition",
                "sourceProviderType": "VarChar"
              }
            ],
            "partitions": [
              {
                "name": "FillRateSlicerDimension",
                "dataView": "full",
                "source": {
                  "query": [
                    "select 1 as FillRateType,",
                    "'Raw' as FillRateName,",
                    "'Shipped List $ divided by ALL Ordered List $' as FillRateDefinition",
                    "\tunion all",
                    "select 2 as FillRateType,",
                    "'Unadjusted' as FillRateName,",
                    "'Shipped List $ divided by Ordered List $ less A, D, and L items' as FillRateDefinition",
                    "\tunion all",
                    "select 3 as FillRateType,",
                    "'Adjusted' as FillRateName,",
                    "'Shipped List $ divided by Ordered List $ less A, D, L, S and T items' as FillRateDefinition"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 1 as FillRateType,",
                      "'Raw' as FillRateName,",
                      "'Shipped List $ divided by ALL Ordered List $' as FillRateDefinition",
                      "\tunion all",
                      "select 2 as FillRateType,",
                      "'Unadjusted' as FillRateName,",
                      "'Shipped List $ divided by Ordered List $ less A, D, and L items' as FillRateDefinition",
                      "\tunion all",
                      "select 3 as FillRateType,",
                      "'Adjusted' as FillRateName,",
                      "'Shipped List $ divided by Ordered List $ less A, D, L, S and T items' as FillRateDefinition</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select 1 as FillRateType,",
                  "'Raw' as FillRateName,",
                  "'Shipped List $ divided by ALL Ordered List $' as FillRateDefinition",
                  "\tunion all",
                  "select 2 as FillRateType,",
                  "'Unadjusted' as FillRateName,",
                  "'Shipped List $ divided by Ordered List $ less A, D, and L items' as FillRateDefinition",
                  "\tunion all",
                  "select 3 as FillRateType,",
                  "'Adjusted' as FillRateName,",
                  "'Shipped List $ divided by Ordered List $ less A, D, L, S and T items' as FillRateDefinition"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "FillRateSlicerDimension"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 1 as FillRateType,",
                  "'Raw' as FillRateName,",
                  "'Shipped List $ divided by ALL Ordered List $' as FillRateDefinition",
                  "\tunion all",
                  "select 2 as FillRateType,",
                  "'Unadjusted' as FillRateName,",
                  "'Shipped List $ divided by Ordered List $ less A, D, and L items' as FillRateDefinition",
                  "\tunion all",
                  "select 3 as FillRateType,",
                  "'Adjusted' as FillRateName,",
                  "'Shipped List $ divided by Ordered List $ less A, D, L, S and T items' as FillRateDefinition</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "KeHEFiscalCalendar",
            "columns": [
              {
                "name": "KeHEFiscalYear",
                "dataType": "int64",
                "sourceColumn": "KeHEFiscalYear",
                "sourceProviderType": "Integer"
              },
              {
                "name": "KeHEFiscalYearStartDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalYearStartDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalYearEndDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalYearEndDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalQuarterNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalQuarterNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "KeHEFiscalQuarter",
                "dataType": "int64",
                "sourceColumn": "KeHEFiscalQuarter",
                "sourceProviderType": "Integer"
              },
              {
                "name": "KeHEFiscalQuarterStartDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalQuarterStartDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalQuarterEndDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalQuarterEndDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalPeriodNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalPeriodNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "KeHEFiscalPeriod",
                "dataType": "int64",
                "sourceColumn": "KeHEFiscalPeriod",
                "sourceProviderType": "Integer"
              },
              {
                "name": "KeHEFiscalPeriodStartDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalPeriodStartDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalPeriodEndDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalPeriodEndDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "Char"
              },
              {
                "name": "KeHEFiscalWeek",
                "dataType": "int64",
                "sourceColumn": "KeHEFiscalWeek",
                "sourceProviderType": "Integer"
              },
              {
                "name": "KeHEFiscalWeekStartDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalWeekStartDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalWeekEndDate",
                "dataType": "dateTime",
                "sourceColumn": "KeHEFiscalWeekEndDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "IsPriorFY",
                "dataType": "int64",
                "sourceColumn": "IsPriorFY"
              },
              {
                "name": "IsCurrentFY",
                "dataType": "int64",
                "sourceColumn": "IsCurrentFY"
              },
              {
                "name": "IsCurrentYTD",
                "dataType": "int64",
                "sourceColumn": "IsCurrentYTD"
              },
              {
                "name": "IsCurrentQTD",
                "dataType": "int64",
                "sourceColumn": "IsCurrentQTD"
              },
              {
                "name": "IsCurrentPTD",
                "dataType": "int64",
                "sourceColumn": "IsCurrentPTD"
              },
              {
                "name": "IsCurrentWeek",
                "dataType": "int64",
                "sourceColumn": "IsCurrentWeek"
              },
              {
                "name": "CYLast4Weeks",
                "dataType": "int64",
                "sourceColumn": "CYLast4Weeks"
              },
              {
                "name": "CYLast13Weeks",
                "dataType": "int64",
                "sourceColumn": "CYLast13Weeks"
              },
              {
                "name": "CYLast26Weeks",
                "dataType": "int64",
                "sourceColumn": "CYLast26Weeks"
              },
              {
                "name": "CYLast52Weeks",
                "dataType": "int64",
                "sourceColumn": "CYLast52Weeks"
              },
              {
                "name": "PYLast4Weeks",
                "dataType": "int64",
                "sourceColumn": "PYLast4Weeks"
              },
              {
                "name": "PYLast13Weeks",
                "dataType": "int64",
                "sourceColumn": "PYLast13Weeks"
              },
              {
                "name": "PYLast26Weeks",
                "dataType": "int64",
                "sourceColumn": "PYLast26Weeks"
              },
              {
                "name": "PYLast52Weeks",
                "dataType": "int64",
                "sourceColumn": "PYLast52Weeks"
              }
            ],
            "partitions": [
              {
                "name": "KeHEFiscalCalendar",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT * FROM [Dimensions].[KeHEFiscalCalendar] ",
                    "where CYLast52Weeks = 1",
                    "or PYLast52Weeks = 1 ",
                    "or IsCurrentFY = 1"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT * FROM [Dimensions].[KeHEFiscalCalendar] ",
                      "where CYLast52Weeks = 1",
                      "or PYLast52Weeks = 1 ",
                      "or IsCurrentFY = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT * FROM [Dimensions].[KeHEFiscalCalendar] ",
                  "where CYLast52Weeks = 1",
                  "or PYLast52Weeks = 1 ",
                  "or IsCurrentFY = 1"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "KeHEFiscalCalendar"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "Dimensions"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT * FROM [Dimensions].[KeHEFiscalCalendar] ",
                  "where CYLast52Weeks = 1",
                  "or PYLast52Weeks = 1 ",
                  "or IsCurrentFY = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "SalesAnalyticsRLS",
            "columns": [
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "Char"
              },
              {
                "name": "AccountID",
                "dataType": "int64",
                "sourceColumn": "AccountID",
                "sourceProviderType": "Integer"
              },
              {
                "name": "UserEmail",
                "dataType": "string",
                "sourceColumn": "UserEmail",
                "sourceProviderType": "Char"
              },
              {
                "name": "UserId",
                "dataType": "int64",
                "sourceColumn": "UserId"
              },
              {
                "name": "UserName",
                "dataType": "string",
                "sourceColumn": "UserName"
              }
            ],
            "partitions": [
              {
                "name": "SalesAnalyticsRLS",
                "dataView": "full",
                "source": {
                  "query": "SELECT t1.* FROM [control].[SalesAnalyticsRLS] t1 order by UserName, DcCustomerAddress",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.* FROM [control].[SalesAnalyticsRLS] t1 order by UserName, DcCustomerAddress</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": "SELECT t1.* FROM [control].[SalesAnalyticsRLS] t1 order by UserName, DcCustomerAddress"
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "SalesAnalyticsRLS"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "control"
              },
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t1.* FROM [control].[SalesAnalyticsRLS] t1 order by UserName, DcCustomerAddress</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "Rolling52WeekCalendar",
            "dataCategory": "Time",
            "columns": [
              {
                "name": "CalendarWeekEndDate",
                "dataType": "dateTime",
                "isKey": true,
                "sourceColumn": "CalendarWeekEndDate",
                "formatString": "Short Date",
                "sourceProviderType": "DBDate",
                "annotations": [
                  {
                    "name": "Format",
                    "value": "<Format Format=\"DateTimeShortDatePattern\" />"
                  }
                ]
              },
              {
                "name": "KeHEFiscalWeek",
                "dataType": "int64",
                "sourceColumn": "KeHEFiscalWeek",
                "sourceProviderType": "Integer"
              }
            ],
            "partitions": [
              {
                "name": "Rolling52WeekCalendar",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT [KeHEFiscalWeek]",
                    "      ,cast([CalendarWeekEndDate] as date) as CalendarWeekEndDate",
                    "  FROM [dbviews].[Rolling52WeekCalendar]"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [KeHEFiscalWeek]",
                      "      ,cast([CalendarWeekEndDate] as date) as CalendarWeekEndDate",
                      "  FROM [dbviews].[Rolling52WeekCalendar]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT [KeHEFiscalWeek]",
                  "      ,cast([CalendarWeekEndDate] as date) as CalendarWeekEndDate",
                  "  FROM [dbviews].[Rolling52WeekCalendar]"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "Rolling52WeekCalendar"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "dbviews"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT [KeHEFiscalWeek]",
                  "      ,cast([CalendarWeekEndDate] as date) as CalendarWeekEndDate",
                  "  FROM [dbviews].[Rolling52WeekCalendar]</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "GBBTiers",
            "columns": [
              {
                "name": "GBBTierNumber",
                "dataType": "int64",
                "sourceColumn": "GBBTierNumber",
                "sourceProviderType": "Integer"
              },
              {
                "name": "GBBTier",
                "dataType": "string",
                "sourceColumn": "GBBTier",
                "sourceProviderType": "VarChar"
              }
            ],
            "partitions": [
              {
                "name": "GBBTiers",
                "dataView": "full",
                "source": {
                  "query": [
                    "select distinct ",
                    "case when GBBTier = 'BEST' then 1",
                    "     when GBBTier = 'BETTER' then 2",
                    "\t when GBBTier = 'GOOD' then 3",
                    "\t when GBBTier = 'NEW' then 4",
                    "\t when GBBTier = 'RETAILER PL' then 5",
                    "\t when GBBTier = 'CAREtrade' then 6",
                    "\t else 7 end as GBBTierNumber,     ",
                    "case when GBBTier = '' then 'NA' else GBBTier end as GBBTier",
                    " from item.Item"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
                      "case when GBBTier = 'BEST' then 1",
                      "     when GBBTier = 'BETTER' then 2",
                      "\t when GBBTier = 'GOOD' then 3",
                      "\t when GBBTier = 'NEW' then 4",
                      "\t when GBBTier = 'RETAILER PL' then 5",
                      "\t when GBBTier = 'CAREtrade' then 6",
                      "\t else 7 end as GBBTierNumber,     ",
                      "case when GBBTier = '' then 'NA' else GBBTier end as GBBTier",
                      " from item.Item</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select distinct ",
                  "case when GBBTier = 'BEST' then 1",
                  "     when GBBTier = 'BETTER' then 2",
                  "\t when GBBTier = 'GOOD' then 3",
                  "\t when GBBTier = 'NEW' then 4",
                  "\t when GBBTier = 'RETAILER PL' then 5",
                  "\t when GBBTier = 'CAREtrade' then 6",
                  "\t else 7 end as GBBTierNumber,     ",
                  "case when GBBTier = '' then 'NA' else GBBTier end as GBBTier",
                  " from item.Item"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "GBBTiers"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct ",
                  "case when GBBTier = 'BEST' then 1",
                  "     when GBBTier = 'BETTER' then 2",
                  "\t when GBBTier = 'GOOD' then 3",
                  "\t when GBBTier = 'NEW' then 4",
                  "\t when GBBTier = 'RETAILER PL' then 5",
                  "\t when GBBTier = 'CAREtrade' then 6",
                  "\t else 7 end as GBBTierNumber,     ",
                  "case when GBBTier = '' then 'NA' else GBBTier end as GBBTier",
                  " from item.Item</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "WeeklyOutOfStock",
            "columns": [
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "Dc",
                "dataType": "string",
                "sourceColumn": "Dc",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "CustomerSubTypeCode",
                "dataType": "string",
                "sourceColumn": "CustomerSubTypeCode",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcVendorNumber",
                "dataType": "string",
                "sourceColumn": "DcVendorNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "UPCNumber",
                "dataType": "double",
                "sourceColumn": "UPCNumber",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "DrivingIssue",
                "dataType": "string",
                "sourceColumn": "DrivingIssue",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "OutOfStockReasonCode",
                "dataType": "string",
                "sourceColumn": "OutOfStockReasonCode",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "ItemNotation",
                "dataType": "string",
                "sourceColumn": "ItemNotation",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "WeeklyQuantityOrdered",
                "dataType": "double",
                "sourceColumn": "WeeklyQuantityOrdered",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyQuantityShipped",
                "dataType": "double",
                "sourceColumn": "WeeklyQuantityShipped",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyOrderedListDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyOrderedListDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyShippedListDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyShippedListDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyOrderedGrossDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyOrderedGrossDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyShippedGrossDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyShippedGrossDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklySalesCOGS",
                "dataType": "double",
                "sourceColumn": "WeeklySalesCOGS",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyTotalDiscountDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyTotalDiscountDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyNetInvoiceDollars",
                "dataType": "double",
                "sourceColumn": "WeeklyNetInvoiceDollars",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "WeeklyLostListWholesaleWeight",
                "dataType": "double",
                "sourceColumn": "WeeklyLostListWholesaleWeight"
              }
            ],
            "partitions": [
              {
                "name": "WeeklyOutOfStock",
                "dataView": "full",
                "source": {
                  "query": [
                    "SELECT t2.[KeHEFiscalWeekNumber]",
                    ",[Dc]",
                    ",t3.[DcCustomerAddress]",
                    ",[CustomerSubTypeCode]",
                    ",[DcVendorNumber]",
                    ",[DcItemNumber]",
                    ",[UPCNumber]",
                    ",[DrivingIssue]",
                    ",[OutOfStockReasonCode]",
                    ",[ItemNotation]",
                    ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                    ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                    ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                    ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                    ",case when [WeeklyShippedListWholesaleWeight]>=[WeeklyOrderedListWholesaleWeight] then 0 else ",
                    " [WeeklyOrderedListWholesaleWeight]-[WeeklyShippedListWholesaleWeight] end as WeeklyLostListWholesaleWeight",
                    ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                    ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                    ",[WeeklySalesCOGS]",
                    ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                    ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                    "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                    "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                    "join customer.CustomerManagement t3 on t1.DcCustomerAddress=t3.DcCustomerAddress",
                    "where IsCurrentWeek = 1 and IsCurrentFY = 1"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t2.[KeHEFiscalWeekNumber]",
                      ",[Dc]",
                      ",t3.[DcCustomerAddress]",
                      ",[CustomerSubTypeCode]",
                      ",[DcVendorNumber]",
                      ",[DcItemNumber]",
                      ",[UPCNumber]",
                      ",[DrivingIssue]",
                      ",[OutOfStockReasonCode]",
                      ",[ItemNotation]",
                      ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                      ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                      ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                      ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                      ",case when [WeeklyShippedListWholesaleWeight]>=[WeeklyOrderedListWholesaleWeight] then 0 else ",
                      " [WeeklyOrderedListWholesaleWeight]-[WeeklyShippedListWholesaleWeight] end as WeeklyLostListWholesaleWeight",
                      ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                      ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                      ",[WeeklySalesCOGS]",
                      ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                      ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                      "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                      "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                      "join customer.CustomerManagement t3 on t1.DcCustomerAddress=t3.DcCustomerAddress",
                      "where IsCurrentWeek = 1 and IsCurrentFY = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "SELECT t2.[KeHEFiscalWeekNumber]",
                  ",[Dc]",
                  ",t3.[DcCustomerAddress]",
                  ",[CustomerSubTypeCode]",
                  ",[DcVendorNumber]",
                  ",[DcItemNumber]",
                  ",[UPCNumber]",
                  ",[DrivingIssue]",
                  ",[OutOfStockReasonCode]",
                  ",[ItemNotation]",
                  ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                  ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                  ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                  ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                  ",case when [WeeklyShippedListWholesaleWeight]>=[WeeklyOrderedListWholesaleWeight] then 0 else ",
                  " [WeeklyOrderedListWholesaleWeight]-[WeeklyShippedListWholesaleWeight] end as WeeklyLostListWholesaleWeight",
                  ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                  ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                  ",[WeeklySalesCOGS]",
                  ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                  ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                  "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                  "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                  "join customer.CustomerManagement t3 on t1.DcCustomerAddress=t3.DcCustomerAddress",
                  "where IsCurrentWeek = 1 and IsCurrentFY = 1"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "WeeklyOutOfStock"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT t2.[KeHEFiscalWeekNumber]",
                  ",[Dc]",
                  ",t3.[DcCustomerAddress]",
                  ",[CustomerSubTypeCode]",
                  ",[DcVendorNumber]",
                  ",[DcItemNumber]",
                  ",[UPCNumber]",
                  ",[DrivingIssue]",
                  ",[OutOfStockReasonCode]",
                  ",[ItemNotation]",
                  ",[WeeklyQuantityRequested] as WeeklyQuantityOrdered",
                  ",[WeeklyLineQuantityShipped] as WeeklyQuantityShipped",
                  ",[WeeklyOrderedListWholesaleWeight] as WeeklyOrderedListDollars",
                  ",[WeeklyShippedListWholesaleWeight] as WeeklyShippedListDollars",
                  ",case when [WeeklyShippedListWholesaleWeight]>=[WeeklyOrderedListWholesaleWeight] then 0 else ",
                  " [WeeklyOrderedListWholesaleWeight]-[WeeklyShippedListWholesaleWeight] end as WeeklyLostListWholesaleWeight",
                  ",[WeeklyOrderedGrossWholesaleWeight] as WeeklyOrderedGrossDollars",
                  ",[WeeklyShippedGrossWholesaleWeight] as WeeklyShippedGrossDollars",
                  ",[WeeklySalesCOGS]",
                  ",[WeeklyDiscountAmountTotal] as WeeklyTotalDiscountDollars",
                  ",[WeeklyNetBillableAmount] as WeeklyNetInvoiceDollars",
                  "FROM [summary].[CustomerItemWeeklySalesSummary] t1",
                  "join Dimensions.KeHEFiscalCalendar t2 on t1.KeHEFiscalWeekNumber=t2.KeHEFiscalWeekNumber",
                  "join customer.CustomerManagement t3 on t1.DcCustomerAddress=t3.DcCustomerAddress",
                  "where IsCurrentWeek = 1 and IsCurrentFY = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "UpcMaster",
            "columns": [
              {
                "name": "Upc",
                "dataType": "double",
                "sourceColumn": "Upc",
                "sourceProviderType": "Decimal"
              },
              {
                "name": "UpcAsString",
                "dataType": "string",
                "sourceColumn": "UpcAsString",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "Category4",
                "dataType": "string",
                "sourceColumn": "Category4",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "L3ItemCategoryLabel",
                "dataType": "string",
                "sourceColumn": "L3ItemCategoryLabel",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "StoreSectionId",
                "dataType": "int64",
                "sourceColumn": "StoreSectionId",
                "sourceProviderType": "Boolean"
              }
            ],
            "partitions": [
              {
                "name": "UpcMaster",
                "dataView": "full",
                "source": {
                  "query": [
                    "select distinct Upc,UpcAsString,Category4,L3ItemCategoryLabel,",
                    "",
                    "case when StoreSectionId=0 then 0 else 1 end as StoreSectionId",
                    "from dbviews.DcVendorItemMaster"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct Upc,UpcAsString,Category4,L3ItemCategoryLabel,",
                      "",
                      "case when StoreSectionId=0 then 0 else 1 end as StoreSectionId",
                      "from dbviews.DcVendorItemMaster</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "select distinct Upc,UpcAsString,Category4,L3ItemCategoryLabel,",
                  "",
                  "case when StoreSectionId=0 then 0 else 1 end as StoreSectionId",
                  "from dbviews.DcVendorItemMaster"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "UpcMaster"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select distinct Upc,UpcAsString,Category4,L3ItemCategoryLabel,",
                  "",
                  "case when StoreSectionId=0 then 0 else 1 end as StoreSectionId",
                  "from dbviews.DcVendorItemMaster</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "SalesAnalytiicsAdmins",
            "columns": [
              {
                "name": "UserId",
                "dataType": "int64",
                "sourceColumn": "UserId",
                "sourceProviderType": "BigInt"
              },
              {
                "name": "UserEmail",
                "dataType": "string",
                "sourceColumn": "UserEmail",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "UserName",
                "dataType": "string",
                "sourceColumn": "UserName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "SecurityId",
                "dataType": "int64",
                "sourceColumn": "SecurityId"
              }
            ],
            "partitions": [
              {
                "name": "SalesAnalytiicsAdmins",
                "dataView": "full",
                "source": {
                  "query": "select 700001 as SecurityId,* from control.SalesAnalyticsAdmins",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 700001 as SecurityId,* from control.SalesAnalyticsAdmins</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": "select 700001 as SecurityId,* from control.SalesAnalyticsAdmins"
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "SalesAnalytiicsAdmins"
              },
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select 700001 as SecurityId,* from control.SalesAnalyticsAdmins</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "DatabaseSync",
            "columns": [
              {
                "name": "LastSyncDateTime",
                "dataType": "dateTime",
                "sourceColumn": "LastSyncDateTime",
                "formatString": "General Date",
                "sourceProviderType": "Date"
              }
            ],
            "partitions": [
              {
                "name": "DatabaseSync",
                "dataView": "full",
                "source": {
                  "query": "select getdate() as LastSyncDateTime",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select getdate() as LastSyncDateTime</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": "select getdate() as LastSyncDateTime"
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "DatabaseSync"
              },
              {
                "name": "QueryEditorSerialization",
                "value": "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>select getdate() as LastSyncDateTime</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
              }
            ]
          },
          {
            "name": "WeeklyInvalids",
            "columns": [
              {
                "name": "CustomerWeek",
                "dataType": "string",
                "sourceColumn": "CustomerWeek",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcCustomerAddress",
                "dataType": "string",
                "sourceColumn": "DcCustomerAddress",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "DcItemNumber",
                "dataType": "string",
                "sourceColumn": "DcItemNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "KeHEFiscalWeekNumber",
                "dataType": "string",
                "sourceColumn": "KeHEFiscalWeekNumber",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "ReasonName",
                "dataType": "string",
                "sourceColumn": "ReasonName",
                "sourceProviderType": "VarChar"
              },
              {
                "name": "InvalidWholesaleRequested",
                "dataType": "double",
                "sourceColumn": "InvalidWholesaleRequested",
                "sourceProviderType": "Decimal"
              }
            ],
            "partitions": [
              {
                "name": "WeeklyInvalids",
                "dataView": "full",
                "source": {
                  "query": [
                    "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                    ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                    "from",
                    "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                    ",sum(QuantityRequested) as InvalidWholesaleRequested",
                    "from [Sales].[InvalidSalesOrderLine] t1",
                    "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                    "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                    "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                    "where IsCurrentWeek = 1 ",
                    "and IsCurrentFY = 1",
                    "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                    "union all",
                    "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                    ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                    "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                    "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                    ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                    "from summary.CustomerItemWeeklySalesSummary s1",
                    "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                    "where IsCurrentWeek = 1 ",
                    "and IsCurrentFY = 1",
                    "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                    ") #q join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                    "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                  ],
                  "dataSource": "SqlServer sqlbi01 RealBI"
                },
                "annotations": [
                  {
                    "name": "QueryEditorSerialization",
                    "value": [
                      "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                      ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                      "from",
                      "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                      ",sum(QuantityRequested) as InvalidWholesaleRequested",
                      "from [Sales].[InvalidSalesOrderLine] t1",
                      "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                      "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                      "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                      "where IsCurrentWeek = 1 ",
                      "and IsCurrentFY = 1",
                      "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                      "union all",
                      "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                      ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                      "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                      "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                      ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                      "from summary.CustomerItemWeeklySalesSummary s1",
                      "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                      "where IsCurrentWeek = 1 ",
                      "and IsCurrentFY = 1",
                      "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                      ") #q join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                      "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                    ]
                  }
                ]
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": [
                  "Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                  ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                  "from",
                  "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                  ",sum(QuantityRequested) as InvalidWholesaleRequested",
                  "from [Sales].[InvalidSalesOrderLine] t1",
                  "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                  "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                  "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                  "where IsCurrentWeek = 1 ",
                  "and IsCurrentFY = 1",
                  "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                  "union all",
                  "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                  ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                  "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                  "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                  ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                  "from summary.CustomerItemWeeklySalesSummary s1",
                  "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                  "where IsCurrentWeek = 1 ",
                  "and IsCurrentFY = 1",
                  "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                  ") #q join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                  "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber"
                ]
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "WeeklyInvalids"
              },
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>Select concat(#q.DcCustomerAddress,#q.KeHEFiscalWeekNumber) as CustomerWeek, #q.DcCustomerAddress,#q.DcItemNumber,#q.KeHEFiscalWeekNumber,ReasonName",
                  ",sum(InvalidWholesaleRequested*WholesalePriceEach) as InvalidWholesaleRequested",
                  "from",
                  "(Select DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName as ReasonName",
                  ",sum(QuantityRequested) as InvalidWholesaleRequested",
                  "from [Sales].[InvalidSalesOrderLine] t1",
                  "join Dimensions.KeHEFiscalDates t2 on SalesOrderDate=DateId",
                  "join Dimensions.KeHEFiscalCalendar t5 on t2.KeHEFiscalWeekNumber=t5.KeHEFiscalWeekNumber",
                  "join dimensions.InvalidItemReason t4 on t1.InvalidItemReasonCode=t4.InvalidItemReasonCode",
                  "where IsCurrentWeek = 1 ",
                  "and IsCurrentFY = 1",
                  "group by DcCustomerAddress,t1.DcItemNumber,t2.KeHEFiscalWeekNumber,t5.KeHEFiscalWeek,t5.KeHEFiscalPeriod,t5.KeHEFiscalYearEndDate,InvalidItemReasonName",
                  "union all",
                  "Select DcCustomerAddress,s1.DcItemNumber,s5.KeHEFiscalWeekNumber,s5.KeHEFiscalWeek,s5.KeHEFiscalPeriod,s5.KeHEFiscalYearEndDate",
                  ",case when OutOfStockReasonCode = 'D' then 'DISCONTINUED BY MFR' else",
                  "case when OutOfStockReasonCode = 'L' then 'DISCONTINUED BY KEHE' else",
                  "case when ItemNotation = 'C' then 'PENDING DISCO' else 'ACTIVE' end end END as ReasonName",
                  ",WeeklyQuantityRequested as InvalidWholesaleRequested",
                  "from summary.CustomerItemWeeklySalesSummary s1",
                  "join Dimensions.KeHEFiscalCalendar s5 on s1.KeHEFiscalWeekNumber=s5.KeHEFiscalWeekNumber",
                  "where IsCurrentWeek = 1 ",
                  "and IsCurrentFY = 1",
                  "and (OutOfStockReasonCode in ('D','L') or ItemNotation = 'C')",
                  ") #q join item.DcItem a1 on #q.DcItemNumber=a1.DcItemNumber",
                  "group by #q.DcCustomerAddress,#q.ReasonName,#q.KeHEFiscalWeekNumber,#q.DcItemNumber</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          },
          {
            "name": "EmployeeUserName",
            "columns": [
              {
                "name": "FirstName",
                "dataType": "string",
                "sourceColumn": "FirstName",
                "sourceProviderType": "Char"
              },
              {
                "name": "PreferredFirstName",
                "dataType": "string",
                "sourceColumn": "PreferredFirstName",
                "sourceProviderType": "Char"
              },
              {
                "name": "LastName",
                "dataType": "string",
                "sourceColumn": "LastName",
                "sourceProviderType": "Char"
              },
              {
                "name": "PreferredFullName",
                "dataType": "string",
                "sourceColumn": "PreferredFullName",
                "sourceProviderType": "Char"
              },
              {
                "name": "UserEmail",
                "dataType": "string",
                "sourceColumn": "UserEmail",
                "sourceProviderType": "Char"
              },
              {
                "name": "UserName",
                "dataType": "string",
                "sourceColumn": "UserName",
                "sourceProviderType": "Char"
              }
            ],
            "partitions": [
              {
                "name": "EmployeeUserName",
                "dataView": "full",
                "source": {
                  "query": " SELECT [control].[EmployeeUserName].* FROM [control].[EmployeeUserName] ",
                  "dataSource": "SqlServer sqlbi01 RealBI"
                }
              }
            ],
            "annotations": [
              {
                "name": "_TM_ExtProp_QueryDefinition",
                "value": " SELECT [control].[EmployeeUserName].* FROM [control].[EmployeeUserName] "
              },
              {
                "name": "_TM_ExtProp_DbTableName",
                "value": "EmployeeUserName"
              },
              {
                "name": "_TM_ExtProp_DbSchemaName",
                "value": "control"
              }
            ]
          }
        ],
        "relationships": [
          {
            "name": "4d792b43-2d35-45df-8eec-1dab84a01eee",
            "fromTable": "InvalidSummary",
            "fromColumn": "ReasonName",
            "toTable": "InvalidReasons",
            "toColumn": "ReasonName"
          },
          {
            "name": "626705e1-6d5f-44ff-87e4-0781f720a680",
            "fromTable": "CustomerDeliveryWindow",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "f8ed7a82-abea-40f3-97bf-73848c9b0af2",
            "fromTable": "InvalidSummary",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "514a68a1-cf12-4ef0-91c7-59ed3b7e4853",
            "fromTable": "MemoSummary",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "a6873754-2978-4991-bbfb-4f4cceab6c5c",
            "fromTable": "CustomerAR",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "fc76e76a-396c-4ba2-8c9d-df8e18096a2d",
            "fromTable": "DeliveryDetail",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "0c28e313-d1d5-49dd-be9f-8854b60b6025",
            "fromTable": "SalesSummary",
            "fromColumn": "DrivingIssue",
            "toTable": "DrivingIssues",
            "toColumn": "DrivingIssue"
          },
          {
            "name": "59d26fc0-c065-4772-a400-ff4bfa137cb1",
            "fromTable": "SalesSummary",
            "fromColumn": "OutOfStockReasonCode",
            "toTable": "OutOfStockReasons",
            "toColumn": "OutOfStockReasonCode"
          },
          {
            "name": "04c64e37-e860-47f7-a733-6395edc7d803",
            "fromTable": "SalesSummary",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "862e82aa-45d5-4b09-90ab-281763364f88",
            "fromTable": "WeeklySalesBudget",
            "fromColumn": "DcCustomerAddressNum",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "862e80c5-702a-4846-b97d-be6190e9ebd7",
            "fromTable": "WeeklySalesBudget",
            "fromColumn": "StoreSectionId",
            "toTable": "StoreSection",
            "toColumn": "StoreSectionId"
          },
          {
            "name": "e4acf28c-85c3-4e0e-802e-699c2eaa30a5",
            "fromTable": "MemoSummary",
            "fromColumn": "DcItemNumber",
            "toTable": "DcVendorItemMaster",
            "toColumn": "DcItemNumber"
          },
          {
            "name": "9831d4a4-b21d-4e08-b829-e2292cea48fc",
            "fromTable": "InvalidSummary",
            "fromColumn": "DcItemNumber",
            "toTable": "DcVendorItemMaster",
            "toColumn": "DcItemNumber"
          },
          {
            "name": "9fe9d96b-f668-4ebd-a3f5-167d8f5fa12c",
            "fromTable": "SalesSummary",
            "fromColumn": "DcItemNumber",
            "toTable": "DcVendorItemMaster",
            "toColumn": "DcItemNumber"
          },
          {
            "name": "33d8f279-84e7-4fd8-b498-4c37d9f55fc5",
            "fromTable": "CustomerManagement",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress",
            "crossFilteringBehavior": "bothDirections"
          },
          {
            "name": "aa654d11-4396-4442-878c-c08c3e3023ff",
            "fromTable": "InvalidSummary",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "18ff00a7-c116-4226-9f51-7a9eb56de429",
            "fromTable": "SalesSummary",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "ab6b2bb6-7742-474c-84be-9181d50cacaa",
            "fromTable": "MemoSummary",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "c563ace1-fb4f-400b-9896-02ee563867bf",
            "fromTable": "WeeklySalesBudget",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "b1acd1d0-1648-421b-8bd1-3d4a4b9baabf",
            "fromTable": "DeliveryDetail",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "fffe9bd5-1737-420e-991b-3165c3566d86",
            "fromTable": "SalesAnalyticsRLS",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerManagement",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "619c5082-f218-4082-9204-d3ef0f5f7151",
            "fromTable": "KeHEFiscalCalendar",
            "fromColumn": "KeHEFiscalWeek",
            "toTable": "Rolling52WeekCalendar",
            "toColumn": "KeHEFiscalWeek"
          },
          {
            "name": "bc1387bb-b6ed-43b7-ba50-929c9c8c87bc",
            "fromTable": "DcVendorItemMaster",
            "fromColumn": "GBBTierNumber",
            "toTable": "GBBTiers",
            "toColumn": "GBBTierNumber"
          },
          {
            "name": "a42fd52c-15d9-4bc9-b153-432289f1cf8e",
            "fromTable": "WeeklyOutOfStock",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerManagement",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "4b340e9e-ca48-4730-b7e5-e235b0769e7d",
            "fromTable": "WeeklyOutOfStock",
            "fromColumn": "KeHEFiscalWeekNumber",
            "toTable": "KeHEFiscalCalendar",
            "toColumn": "KeHEFiscalWeekNumber"
          },
          {
            "name": "9befdbb1-759f-4f91-be44-cdac58296bed",
            "fromTable": "WeeklyOutOfStock",
            "fromColumn": "OutOfStockReasonCode",
            "toTable": "OutOfStockReasons",
            "toColumn": "OutOfStockReasonCode"
          },
          {
            "name": "e7367b74-a06a-416e-996c-da321a7c4965",
            "fromTable": "WeeklyOutOfStock",
            "fromColumn": "DrivingIssue",
            "toTable": "DrivingIssues",
            "toColumn": "DrivingIssue"
          },
          {
            "name": "b44e17dd-335b-4e44-b734-9d6fa8fa343a",
            "fromTable": "WeeklyOutOfStock",
            "fromColumn": "UPCNumber",
            "toTable": "UpcMaster",
            "toColumn": "Upc"
          },
          {
            "name": "bb00ffe0-8454-4314-9b30-b3cc41dfff5c",
            "fromTable": "DcVendorItemMaster",
            "fromColumn": "UPCAsString",
            "toTable": "UpcMaster",
            "toColumn": "UpcAsString"
          },
          {
            "name": "9ed2535e-980a-4138-84ed-f626c63c3686",
            "fromTable": "DcVendorItemMaster",
            "fromColumn": "StoreSectionId",
            "toTable": "StoreSection",
            "toColumn": "StoreSectionId"
          },
          {
            "name": "b72c8b57-e468-47d3-8464-bf2924e38aaa",
            "fromTable": "WeeklyInvalids",
            "fromColumn": "DcItemNumber",
            "toTable": "DcVendorItemMaster",
            "toColumn": "DcItemNumber"
          },
          {
            "name": "9c39bb84-a80c-4486-95e9-afca44287021",
            "fromTable": "WeeklyInvalids",
            "fromColumn": "DcCustomerAddress",
            "toTable": "CustomerMaster",
            "toColumn": "DcCustomerAddress"
          },
          {
            "name": "23ce02ef-b747-449d-9a10-97b3d9b6dd09",
            "fromTable": "WeeklyInvalids",
            "fromColumn": "ReasonName",
            "toTable": "InvalidReasons",
            "toColumn": "ReasonName"
          }
        ],
        "roles": [
          {
            "name": "RowLevelUsers",
            "description": "Users of dashboard w/ RLS",
            "modelPermission": "read",
            "members": [
              {
                "memberName": "KEHE\\Domain Users",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-513"
              }
            ],
            "tablePermissions": [
              {
                "name": "CustomerManagement",
                "filterExpression": "CustomerManagement[DcCustomerAddress]=LOOKUPVALUE(SalesAnalyticsRLS[DcCustomerAddress],SalesAnalyticsRLS[UserName],USERNAME(),SalesAnalyticsRLS[DcCustomerAddress],CustomerManagement[DcCustomerAddress])"
              },
              {
                "name": "SalesAnalyticsRLS",
                "filterExpression": "true()"
              }
            ]
          },
          {
            "name": "ITUsers",
            "description": "IT Users",
            "modelPermission": "read",
            "members": [
              {
                "memberName": "KEHE\\bxwilkinson",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-4048"
              },
              {
                "memberName": "KEHE\\afmcgrath",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-9288"
              },
              {
                "memberName": "KEHE\\TLBranch",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-27602"
              },
              {
                "memberName": "KEHE\\AXYarlagadda",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-31426"
              },
              {
                "memberName": "KEHE\\JLHawkins",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-22848"
              }
            ]
          },
          {
            "name": "NonRowLevelUsers",
            "description": "Users of dashboard w/o RLS",
            "modelPermission": "read",
            "members": [
              {
                "memberName": "KEHE\\Domain Users",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-513"
              }
            ],
            "tablePermissions": [
              {
                "name": "SalesAnalytiicsAdmins",
                "filterExpression": "true()"
              },
              {
                "name": "CustomerManagement",
                "filterExpression": "CustomerManagement[SecurityId]=LOOKUPVALUE(SalesAnalytiicsAdmins[SecurityId],SalesAnalytiicsAdmins[UserName],USERNAME(),SalesAnalytiicsAdmins[SecurityId],CustomerManagement[SecurityId])"
              }
            ]
          },
          {
            "name": "DatabaseAdmins",
            "description": "Users who can process data",
            "modelPermission": "readRefresh",
            "members": [
              {
                "memberName": "KEHE\\mefinn",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-7971"
              },
              {
                "memberName": "KEHE\\bmward",
                "memberId": "S-1-5-21-2173507911-179735005-3616570196-12399"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "ClientCompatibilityLevel",
            "value": "500"
          }
        ]
      }
    }
  }
}
